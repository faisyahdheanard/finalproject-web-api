[{"line":2,"elements":[{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":498063000,"status":"passed"},"line":5,"name":"the request header is properly set up","match":{"location":"com.dean.api.stepdefs.theRequestHeaderIsProperlySetUp()"},"keyword":"Given "}]},{"start_timestamp":"2023-09-04T17:09:35.345Z","line":8,"name":"GET: get list of users","description":"","id":"get;get:-get-list-of-users","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1110045000,"status":"passed"},"line":9,"name":"send a \"GET\" request to the \"list\" endpoint","match":{"arguments":[{"val":"\"GET\"","offset":7},{"val":"\"list\"","offset":28}],"location":"com.dean.api.stepdefs.sendARequestToTheEndpoint(java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":1426000,"status":"passed"},"line":10,"name":"the status code should be 200","match":{"arguments":[{"val":"200","offset":26}],"location":"com.dean.api.stepdefs.theStatusCodeShouldBe(int)"},"keyword":"Then "},{"result":{"duration":381614000,"status":"passed"},"line":11,"name":"all response should be match with \"get_list_user.json\"","match":{"arguments":[{"val":"\"get_list_user.json\"","offset":34}],"location":"com.dean.api.stepdefs.allResponseShouldBeMatchWith(java.lang.String)"},"keyword":"And "},{"result":{"duration":480406000,"status":"passed"},"line":12,"name":"the limit and the page should be set to their default values","match":{"location":"com.dean.api.stepdefs.theLimitAndThePageShouldBeSetToTheirDefaultValues()"},"keyword":"And "}],"tags":[{"name":"@api"},{"name":"@get-positive"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":587000,"status":"passed"},"line":5,"name":"the request header is properly set up","match":{"location":"com.dean.api.stepdefs.theRequestHeaderIsProperlySetUp()"},"keyword":"Given "}]},{"start_timestamp":"2023-09-04T17:09:37.845Z","line":16,"name":"GET: get user full data by id","description":"","id":"get;get:-get-user-full-data-by-id","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":214852000,"status":"passed"},"line":17,"name":"send a \"GET\" request to the \"single\" endpoint with id \"60d0fe4f5311236168a109ca\"","match":{"arguments":[{"val":"\"GET\"","offset":7},{"val":"\"single\"","offset":28},{"val":"\"60d0fe4f5311236168a109ca\"","offset":54}],"location":"com.dean.api.stepdefs.sendARequestToTheEndpointWithId(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":143000,"status":"passed"},"line":18,"name":"the status code should be 200","match":{"arguments":[{"val":"200","offset":26}],"location":"com.dean.api.stepdefs.theStatusCodeShouldBe(int)"},"keyword":"Then "},{"result":{"duration":9010000,"status":"passed"},"line":19,"name":"all response should be match with \"get_single_user.json\"","match":{"arguments":[{"val":"\"get_single_user.json\"","offset":34}],"location":"com.dean.api.stepdefs.allResponseShouldBeMatchWith(java.lang.String)"},"keyword":"And "},{"result":{"duration":77244000,"status":"passed"},"line":20,"name":"the response body should contain important user details","match":{"location":"com.dean.api.stepdefs.theResponseBodyShouldContainImportantUserDetails()"},"keyword":"And "}],"tags":[{"name":"@api"},{"name":"@get-positive"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":3372000,"status":"passed"},"line":5,"name":"the request header is properly set up","match":{"location":"com.dean.api.stepdefs.theRequestHeaderIsProperlySetUp()"},"keyword":"Given "}]},{"start_timestamp":"2023-09-04T17:09:38.159Z","line":23,"name":"GET: get user full data with wrong id","description":"","id":"get;get:-get-user-full-data-with-wrong-id","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":166538000,"status":"passed"},"line":24,"name":"send a \"GET\" request to the \"single\" endpoint with id \"0123\"","match":{"arguments":[{"val":"\"GET\"","offset":7},{"val":"\"single\"","offset":28},{"val":"\"0123\"","offset":54}],"location":"com.dean.api.stepdefs.sendARequestToTheEndpointWithId(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":185000,"status":"passed"},"line":25,"name":"the status code should be 400","match":{"arguments":[{"val":"400","offset":26}],"location":"com.dean.api.stepdefs.theStatusCodeShouldBe(int)"},"keyword":"Then "},{"result":{"duration":34245000,"status":"passed"},"line":26,"name":"the response body should contain:","match":{"location":"com.dean.api.stepdefs.theResponseBodyShouldContain(java.util.Map<java.lang.String, java.lang.String>)"},"rows":[{"cells":["error","PARAMS_NOT_VALID"]}],"keyword":"And "}],"tags":[{"name":"@api"},{"name":"@get-negative"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":465000,"status":"passed"},"line":5,"name":"the request header is properly set up","match":{"location":"com.dean.api.stepdefs.theRequestHeaderIsProperlySetUp()"},"keyword":"Given "}]},{"start_timestamp":"2023-09-04T17:09:38.381Z","line":30,"name":"GET: get user full data with id containing \"-\"","description":"","id":"get;get:-get-user-full-data-with-id-containing-\"-\"","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":146869000,"status":"passed"},"line":31,"name":"send a \"GET\" request to the \"single\" endpoint with id \"-60d0fe4f5311236168a109ca\"","match":{"arguments":[{"val":"\"GET\"","offset":7},{"val":"\"single\"","offset":28},{"val":"\"-60d0fe4f5311236168a109ca\"","offset":54}],"location":"com.dean.api.stepdefs.sendARequestToTheEndpointWithId(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":165000,"status":"passed"},"line":32,"name":"the status code should be 400","match":{"arguments":[{"val":"400","offset":26}],"location":"com.dean.api.stepdefs.theStatusCodeShouldBe(int)"},"keyword":"Then "},{"result":{"duration":25936000,"status":"passed"},"line":33,"name":"the response body should contain:","match":{"location":"com.dean.api.stepdefs.theResponseBodyShouldContain(java.util.Map<java.lang.String, java.lang.String>)"},"rows":[{"cells":["error","PARAMS_NOT_VALID"]}],"keyword":"And "}],"tags":[{"name":"@api"},{"name":"@get-negative"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":416000,"status":"passed"},"line":5,"name":"the request header is properly set up","match":{"location":"com.dean.api.stepdefs.theRequestHeaderIsProperlySetUp()"},"keyword":"Given "}]},{"start_timestamp":"2023-09-04T17:09:38.566Z","line":52,"name":"GET: get list of users with valid 'limit' and 'page' boundary values","description":"","id":"get;get:-get-list-of-users-with-valid--limit--and--page--boundary-values;;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":18662000,"status":"passed"},"line":40,"name":"the request paramaters set to:","match":{"location":"com.dean.api.stepdefs.theRequestParamatersSetTo(java.util.Map<java.lang.String, java.lang.String>)"},"rows":[{"cells":["limit","5"]},{"cells":["page","0"]}],"keyword":"When "},{"result":{"duration":161309000,"status":"passed"},"line":43,"name":"send a \"GET\" request to the \"list\" endpoint","match":{"arguments":[{"val":"\"GET\"","offset":7},{"val":"\"list\"","offset":28}],"location":"com.dean.api.stepdefs.sendARequestToTheEndpoint(java.lang.String,java.lang.String)"},"keyword":"And "},{"result":{"duration":120000,"status":"passed"},"line":44,"name":"the status code should be 200","match":{"arguments":[{"val":"200","offset":26}],"location":"com.dean.api.stepdefs.theStatusCodeShouldBe(int)"},"keyword":"Then "},{"result":{"duration":32824000,"status":"passed"},"line":45,"name":"all response should be match with \"get_list_user.json\"","match":{"arguments":[{"val":"\"get_list_user.json\"","offset":34}],"location":"com.dean.api.stepdefs.allResponseShouldBeMatchWith(java.lang.String)"},"keyword":"And "},{"result":{"duration":28137000,"status":"passed"},"line":46,"name":"the response body should contain:","match":{"location":"com.dean.api.stepdefs.theResponseBodyShouldContain(java.util.Map<java.lang.String, java.lang.String>)"},"rows":[{"cells":["limit","5"]},{"cells":["page","0"]}],"keyword":"And "}],"tags":[{"name":"@api"},{"name":"@get-positive-boundaries"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":407000,"status":"passed"},"line":5,"name":"the request header is properly set up","match":{"location":"com.dean.api.stepdefs.theRequestHeaderIsProperlySetUp()"},"keyword":"Given "}]},{"start_timestamp":"2023-09-04T17:09:38.834Z","line":53,"name":"GET: get list of users with valid 'limit' and 'page' boundary values","description":"","id":"get;get:-get-list-of-users-with-valid--limit--and--page--boundary-values;;3","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":657000,"status":"passed"},"line":40,"name":"the request paramaters set to:","match":{"location":"com.dean.api.stepdefs.theRequestParamatersSetTo(java.util.Map<java.lang.String, java.lang.String>)"},"rows":[{"cells":["limit","50"]},{"cells":["page","999"]}],"keyword":"When "},{"result":{"duration":222085000,"status":"passed"},"line":43,"name":"send a \"GET\" request to the \"list\" endpoint","match":{"arguments":[{"val":"\"GET\"","offset":7},{"val":"\"list\"","offset":28}],"location":"com.dean.api.stepdefs.sendARequestToTheEndpoint(java.lang.String,java.lang.String)"},"keyword":"And "},{"result":{"duration":135000,"status":"passed"},"line":44,"name":"the status code should be 200","match":{"arguments":[{"val":"200","offset":26}],"location":"com.dean.api.stepdefs.theStatusCodeShouldBe(int)"},"keyword":"Then "},{"result":{"duration":13553000,"status":"passed"},"line":45,"name":"all response should be match with \"get_list_user.json\"","match":{"arguments":[{"val":"\"get_list_user.json\"","offset":34}],"location":"com.dean.api.stepdefs.allResponseShouldBeMatchWith(java.lang.String)"},"keyword":"And "},{"result":{"duration":24446000,"status":"passed"},"line":46,"name":"the response body should contain:","match":{"location":"com.dean.api.stepdefs.theResponseBodyShouldContain(java.util.Map<java.lang.String, java.lang.String>)"},"rows":[{"cells":["limit","50"]},{"cells":["page","999"]}],"keyword":"And "}],"tags":[{"name":"@api"},{"name":"@get-positive-boundaries"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":931000,"status":"passed"},"line":5,"name":"the request header is properly set up","match":{"location":"com.dean.api.stepdefs.theRequestHeaderIsProperlySetUp()"},"keyword":"Given "}]},{"start_timestamp":"2023-09-04T17:09:39.105Z","line":58,"name":"GET: get list of users with invalid 'limit' and 'page' boundary values","description":"","id":"get;get:-get-list-of-users-with-invalid--limit--and--page--boundary-values","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":3762000,"status":"passed"},"line":59,"name":"the request paramaters set to:","match":{"location":"com.dean.api.stepdefs.theRequestParamatersSetTo(java.util.Map<java.lang.String, java.lang.String>)"},"rows":[{"cells":["limit","51"]},{"cells":["page","1000"]}],"keyword":"When "},{"result":{"duration":162691000,"status":"passed"},"line":62,"name":"send a \"GET\" request to the \"list\" endpoint","match":{"arguments":[{"val":"\"GET\"","offset":7},{"val":"\"list\"","offset":28}],"location":"com.dean.api.stepdefs.sendARequestToTheEndpoint(java.lang.String,java.lang.String)"},"keyword":"And "},{"result":{"error_message":"java.lang.AssertionError: expected:<400> but was:<200>\n\tat org.junit.Assert.fail(Assert.java:89)\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\n\tat org.junit.Assert.assertEquals(Assert.java:647)\n\tat org.junit.Assert.assertEquals(Assert.java:633)\n\tat com.dean.api.stepdefs.theStatusCodeShouldBe(stepdefs.java:61)\n\tat ✽.the status code should be 400(file:///home/runner/work/automation-web-api-finalproject/automation-web-api-finalproject/src/test/resources/api/features/01_GET.feature:63)\n","duration":3430000,"status":"failed"},"line":63,"name":"the status code should be 400","match":{"arguments":[{"val":"400","offset":26}],"location":"com.dean.api.stepdefs.theStatusCodeShouldBe(int)"},"keyword":"Then "},{"result":{"duration":79000,"status":"skipped"},"line":64,"name":"the response body should contain:","match":{"location":"com.dean.api.stepdefs.theResponseBodyShouldContain(java.util.Map<java.lang.String, java.lang.String>)"},"rows":[{"cells":["error","PARAMS_NOT_VALID"]}],"keyword":"And "}],"tags":[{"name":"@api"},{"name":"@get-negative-boundaries"}]}],"name":"GET","description":"","id":"get","keyword":"Feature","uri":"file:src/test/resources/api/features/01_GET.feature","tags":[{"name":"@api","type":"Tag","location":{"line":1,"column":1}}]},{"line":2,"elements":[{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":595000,"status":"passed"},"line":5,"name":"the request header is properly set up","match":{"location":"com.dean.api.stepdefs.theRequestHeaderIsProperlySetUp()"},"keyword":"Given "}]},{"start_timestamp":"2023-09-04T17:09:39.282Z","line":9,"name":"POST: create a new user with completed fields","description":"","id":"post;post:-create-a-new-user-with-completed-fields","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":2557000,"status":"passed"},"line":10,"name":"the request body for \"POST\" with \"complete fields\" is prepared","match":{"arguments":[{"val":"\"POST\"","offset":21},{"val":"\"complete fields\"","offset":33}],"location":"com.dean.api.stepdefs.theRequestBodyForWithIsAlreadySet(java.lang.String,java.lang.String)"},"keyword":"And "},{"result":{"duration":167874000,"status":"passed"},"line":11,"name":"send a \"POST\" request to the \"create\" endpoint","match":{"arguments":[{"val":"\"POST\"","offset":7},{"val":"\"create\"","offset":29}],"location":"com.dean.api.stepdefs.sendARequestToTheEndpoint(java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":121000,"status":"passed"},"line":12,"name":"the status code should be 200","match":{"arguments":[{"val":"200","offset":26}],"location":"com.dean.api.stepdefs.theStatusCodeShouldBe(int)"},"keyword":"Then "},{"result":{"duration":5575000,"status":"passed"},"line":13,"name":"all response should be match with \"post_put_user.json\"","match":{"arguments":[{"val":"\"post_put_user.json\"","offset":34}],"location":"com.dean.api.stepdefs.allResponseShouldBeMatchWith(java.lang.String)"},"keyword":"And "},{"result":{"duration":60281000,"status":"passed"},"line":14,"name":"the response body should contain important user details","match":{"location":"com.dean.api.stepdefs.theResponseBodyShouldContainImportantUserDetails()"},"keyword":"And "},{"result":{"duration":73127000,"status":"passed"},"line":15,"name":"the response body should not be empty","match":{"location":"com.dean.api.stepdefs.theResponseBodyShouldNotBeEmpty()"},"keyword":"And "},{"result":{"duration":775000,"status":"passed"},"line":16,"name":"the response body matches the \"completed fields\" request body","match":{"arguments":[{"val":"\"completed fields\"","offset":30}],"location":"com.dean.api.stepdefs.theResponseBodyMatchesTheRequestBody(java.lang.String)"},"keyword":"And "},{"result":{"duration":11101000,"status":"passed"},"line":17,"name":"the response body \"id\" will be named as \"userId1\" and will be used for the next tests","match":{"arguments":[{"val":"\"id\"","offset":18},{"val":"\"userId1\"","offset":40}],"location":"com.dean.api.stepdefs.theResponseBodyIdWillBeNamedAsAndWillBeUsedForTheNextTests(java.lang.String,java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@api"},{"name":"@post-positive"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":560000,"status":"passed"},"line":5,"name":"the request header is properly set up","match":{"location":"com.dean.api.stepdefs.theRequestHeaderIsProperlySetUp()"},"keyword":"Given "}]},{"start_timestamp":"2023-09-04T17:09:39.627Z","line":21,"name":"POST: create a new user with limited fields","description":"","id":"post;post:-create-a-new-user-with-limited-fields","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1431000,"status":"passed"},"line":22,"name":"the request body for \"POST\" with \"limited fields\" is prepared","match":{"arguments":[{"val":"\"POST\"","offset":21},{"val":"\"limited fields\"","offset":33}],"location":"com.dean.api.stepdefs.theRequestBodyForWithIsAlreadySet(java.lang.String,java.lang.String)"},"keyword":"And "},{"result":{"duration":319464000,"status":"passed"},"line":23,"name":"send a \"POST\" request to the \"create\" endpoint","match":{"arguments":[{"val":"\"POST\"","offset":7},{"val":"\"create\"","offset":29}],"location":"com.dean.api.stepdefs.sendARequestToTheEndpoint(java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":111000,"status":"passed"},"line":24,"name":"the status code should be 200","match":{"arguments":[{"val":"200","offset":26}],"location":"com.dean.api.stepdefs.theStatusCodeShouldBe(int)"},"keyword":"Then "},{"result":{"duration":3463000,"status":"passed"},"line":25,"name":"all response should be match with \"post_user_limited.json\"","match":{"arguments":[{"val":"\"post_user_limited.json\"","offset":34}],"location":"com.dean.api.stepdefs.allResponseShouldBeMatchWith(java.lang.String)"},"keyword":"And "},{"result":{"duration":32572000,"status":"passed"},"line":26,"name":"the response body should contain important user details","match":{"location":"com.dean.api.stepdefs.theResponseBodyShouldContainImportantUserDetails()"},"keyword":"And "},{"result":{"duration":36188000,"status":"passed"},"line":27,"name":"the response body matches the \"limited fields\" request body","match":{"arguments":[{"val":"\"limited fields\"","offset":30}],"location":"com.dean.api.stepdefs.theResponseBodyMatchesTheRequestBody(java.lang.String)"},"keyword":"And "},{"result":{"duration":15805000,"status":"passed"},"line":28,"name":"the response body \"id\" will be named as \"userId2\" and will be used for the next tests","match":{"arguments":[{"val":"\"id\"","offset":18},{"val":"\"userId2\"","offset":40}],"location":"com.dean.api.stepdefs.theResponseBodyIdWillBeNamedAsAndWillBeUsedForTheNextTests(java.lang.String,java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@api"},{"name":"@post-positive"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":2004000,"status":"passed"},"line":5,"name":"the request header is properly set up","match":{"location":"com.dean.api.stepdefs.theRequestHeaderIsProperlySetUp()"},"keyword":"Given "}]},{"start_timestamp":"2023-09-04T17:09:40.046Z","line":32,"name":"POST: create a new user with special characters on name fields","description":"","id":"post;post:-create-a-new-user-with-special-characters-on-name-fields","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":272000,"status":"passed"},"line":33,"name":"the request body is set to:","match":{"location":"com.dean.api.stepdefs.theRequestBodyIsSetTo(java.util.Map<java.lang.String, java.lang.String>)"},"rows":[{"cells":["firstName","#######"]},{"cells":["lastName","example"]},{"cells":["email","exampletest@gmail.com"]}],"keyword":"And "},{"result":{"duration":212633000,"status":"passed"},"line":37,"name":"send a \"POST\" request to the \"create\" endpoint","match":{"arguments":[{"val":"\"POST\"","offset":7},{"val":"\"create\"","offset":29}],"location":"com.dean.api.stepdefs.sendARequestToTheEndpoint(java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":7710000,"status":"passed"},"line":39,"name":"the response body \"id\" will be named as \"userId3\" and will be used for the next tests","match":{"arguments":[{"val":"\"id\"","offset":18},{"val":"\"userId3\"","offset":40}],"location":"com.dean.api.stepdefs.theResponseBodyIdWillBeNamedAsAndWillBeUsedForTheNextTests(java.lang.String,java.lang.String)"},"keyword":"And "},{"result":{"error_message":"java.lang.AssertionError: expected:<400> but was:<200>\n\tat org.junit.Assert.fail(Assert.java:89)\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\n\tat org.junit.Assert.assertEquals(Assert.java:647)\n\tat org.junit.Assert.assertEquals(Assert.java:633)\n\tat com.dean.api.stepdefs.theStatusCodeShouldBe(stepdefs.java:61)\n\tat ✽.the status code should be 400(file:///home/runner/work/automation-web-api-finalproject/automation-web-api-finalproject/src/test/resources/api/features/02_POST.feature:41)\n","duration":393000,"status":"failed"},"line":41,"name":"the status code should be 400","match":{"arguments":[{"val":"400","offset":26}],"location":"com.dean.api.stepdefs.theStatusCodeShouldBe(int)"},"keyword":"Then "},{"result":{"duration":58000,"status":"skipped"},"line":42,"name":"the response body should contain:","match":{"location":"com.dean.api.stepdefs.theResponseBodyShouldContain(java.util.Map<java.lang.String, java.lang.String>)"},"rows":[{"cells":["error","BODY_NOT_VALID"]},{"cells":["data.firstName","firstName cannot contain special characters, use letters only"]}],"keyword":"And "}],"tags":[{"name":"@api"},{"name":"@post-negative"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":394000,"status":"passed"},"line":5,"name":"the request header is properly set up","match":{"location":"com.dean.api.stepdefs.theRequestHeaderIsProperlySetUp()"},"keyword":"Given "}]},{"start_timestamp":"2023-09-04T17:09:40.278Z","line":48,"name":"POST: create a new user with number on name fields","description":"","id":"post;post:-create-a-new-user-with-number-on-name-fields","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":268000,"status":"passed"},"line":49,"name":"the request body is set to:","match":{"location":"com.dean.api.stepdefs.theRequestBodyIsSetTo(java.util.Map<java.lang.String, java.lang.String>)"},"rows":[{"cells":["firstName","0000000"]},{"cells":["lastName","example"]},{"cells":["email","exampletest2@gmail.com"]}],"keyword":"And "},{"result":{"duration":140199000,"status":"passed"},"line":53,"name":"send a \"POST\" request to the \"create\" endpoint","match":{"arguments":[{"val":"\"POST\"","offset":7},{"val":"\"create\"","offset":29}],"location":"com.dean.api.stepdefs.sendARequestToTheEndpoint(java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":11742000,"status":"passed"},"line":55,"name":"the response body \"id\" will be named as \"userId4\" and will be used for the next tests","match":{"arguments":[{"val":"\"id\"","offset":18},{"val":"\"userId4\"","offset":40}],"location":"com.dean.api.stepdefs.theResponseBodyIdWillBeNamedAsAndWillBeUsedForTheNextTests(java.lang.String,java.lang.String)"},"keyword":"And "},{"result":{"error_message":"java.lang.AssertionError: expected:<400> but was:<200>\n\tat org.junit.Assert.fail(Assert.java:89)\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\n\tat org.junit.Assert.assertEquals(Assert.java:647)\n\tat org.junit.Assert.assertEquals(Assert.java:633)\n\tat com.dean.api.stepdefs.theStatusCodeShouldBe(stepdefs.java:61)\n\tat ✽.the status code should be 400(file:///home/runner/work/automation-web-api-finalproject/automation-web-api-finalproject/src/test/resources/api/features/02_POST.feature:57)\n","duration":879000,"status":"failed"},"line":57,"name":"the status code should be 400","match":{"arguments":[{"val":"400","offset":26}],"location":"com.dean.api.stepdefs.theStatusCodeShouldBe(int)"},"keyword":"Then "},{"result":{"duration":180000,"status":"skipped"},"line":58,"name":"the response body should contain:","match":{"location":"com.dean.api.stepdefs.theResponseBodyShouldContain(java.util.Map<java.lang.String, java.lang.String>)"},"rows":[{"cells":["error","BODY_NOT_VALID"]},{"cells":["data.firstName","firstName cannot contain number, use letters only"]}],"keyword":"And "}],"tags":[{"name":"@api"},{"name":"@post-negative"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":2003000,"status":"passed"},"line":5,"name":"the request header is properly set up","match":{"location":"com.dean.api.stepdefs.theRequestHeaderIsProperlySetUp()"},"keyword":"Given "}]},{"start_timestamp":"2023-09-04T17:09:40.442Z","line":63,"name":"POST: create a new user with existing email","description":"","id":"post;post:-create-a-new-user-with-existing-email","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":251000,"status":"passed"},"line":64,"name":"the request body is set to:","match":{"location":"com.dean.api.stepdefs.theRequestBodyIsSetTo(java.util.Map<java.lang.String, java.lang.String>)"},"rows":[{"cells":["firstName","faisyah"]},{"cells":["lastName","dheana"]},{"cells":["email","fdheana@example.com"]}],"keyword":"And "},{"result":{"duration":145452000,"status":"passed"},"line":68,"name":"send a \"POST\" request to the \"create\" endpoint","match":{"arguments":[{"val":"\"POST\"","offset":7},{"val":"\"create\"","offset":29}],"location":"com.dean.api.stepdefs.sendARequestToTheEndpoint(java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":103000,"status":"passed"},"line":69,"name":"the status code should be 400","match":{"arguments":[{"val":"400","offset":26}],"location":"com.dean.api.stepdefs.theStatusCodeShouldBe(int)"},"keyword":"Then "},{"result":{"duration":13375000,"status":"passed"},"line":70,"name":"the response body should contain:","match":{"location":"com.dean.api.stepdefs.theResponseBodyShouldContain(java.util.Map<java.lang.String, java.lang.String>)"},"rows":[{"cells":["error","BODY_NOT_VALID"]},{"cells":["data.email","Email already used"]}],"keyword":"And "}],"tags":[{"name":"@api"},{"name":"@post-negative"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":428000,"status":"passed"},"line":5,"name":"the request header is properly set up","match":{"location":"com.dean.api.stepdefs.theRequestHeaderIsProperlySetUp()"},"keyword":"Given "}]},{"start_timestamp":"2023-09-04T17:09:40.609Z","line":75,"name":"POST: create a new user without '@' on email","description":"","id":"post;post:-create-a-new-user-without--@--on-email","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":244000,"status":"passed"},"line":76,"name":"the request body is set to:","match":{"location":"com.dean.api.stepdefs.theRequestBodyIsSetTo(java.util.Map<java.lang.String, java.lang.String>)"},"rows":[{"cells":["firstName","faisyah"]},{"cells":["lastName","dheana"]},{"cells":["email","fdheanagmail.com"]}],"keyword":"And "},{"result":{"duration":160642000,"status":"passed"},"line":80,"name":"send a \"POST\" request to the \"create\" endpoint","match":{"arguments":[{"val":"\"POST\"","offset":7},{"val":"\"create\"","offset":29}],"location":"com.dean.api.stepdefs.sendARequestToTheEndpoint(java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":103000,"status":"passed"},"line":81,"name":"the status code should be 400","match":{"arguments":[{"val":"400","offset":26}],"location":"com.dean.api.stepdefs.theStatusCodeShouldBe(int)"},"keyword":"Then "},{"result":{"duration":19176000,"status":"passed"},"line":82,"name":"the response body should contain:","match":{"location":"com.dean.api.stepdefs.theResponseBodyShouldContain(java.util.Map<java.lang.String, java.lang.String>)"},"rows":[{"cells":["error","BODY_NOT_VALID"]},{"cells":["data.email","Path `email` is invalid (fdheanagmail.com)."]}],"keyword":"And "}],"tags":[{"name":"@api"},{"name":"@post-negative"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":1532000,"status":"passed"},"line":5,"name":"the request header is properly set up","match":{"location":"com.dean.api.stepdefs.theRequestHeaderIsProperlySetUp()"},"keyword":"Given "}]},{"start_timestamp":"2023-09-04T17:09:40.793Z","line":88,"name":"POST: create a new user with incomplete required field","description":"","id":"post;post:-create-a-new-user-with-incomplete-required-field","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":249000,"status":"passed"},"line":89,"name":"the request body is set to:","match":{"location":"com.dean.api.stepdefs.theRequestBodyIsSetTo(java.util.Map<java.lang.String, java.lang.String>)"},"rows":[{"cells":["firstName","faisyah"]}],"keyword":"And "},{"result":{"duration":151784000,"status":"passed"},"line":91,"name":"send a \"POST\" request to the \"create\" endpoint","match":{"arguments":[{"val":"\"POST\"","offset":7},{"val":"\"create\"","offset":29}],"location":"com.dean.api.stepdefs.sendARequestToTheEndpoint(java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":116000,"status":"passed"},"line":92,"name":"the status code should be 400","match":{"arguments":[{"val":"400","offset":26}],"location":"com.dean.api.stepdefs.theStatusCodeShouldBe(int)"},"keyword":"Then "},{"result":{"duration":22719000,"status":"passed"},"line":93,"name":"the response body should contain:","match":{"location":"com.dean.api.stepdefs.theResponseBodyShouldContain(java.util.Map<java.lang.String, java.lang.String>)"},"rows":[{"cells":["error","BODY_NOT_VALID"]},{"cells":["data.email","Path `email` is required."]},{"cells":["data.lastName","Path `lastName` is required."]}],"keyword":"And "}],"tags":[{"name":"@api"},{"name":"@post-negative"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":390000,"status":"passed"},"line":5,"name":"the request header is properly set up","match":{"location":"com.dean.api.stepdefs.theRequestHeaderIsProperlySetUp()"},"keyword":"Given "}]},{"start_timestamp":"2023-09-04T17:09:40.976Z","line":100,"name":"POST: create a new user with invalid data (title: drs)","description":"","id":"post;post:-create-a-new-user-with-invalid-data-(title:-drs)","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":171000,"status":"passed"},"line":101,"name":"the request body for \"POST\" with \"invalid fields\" is prepared","match":{"arguments":[{"val":"\"POST\"","offset":21},{"val":"\"invalid fields\"","offset":33}],"location":"com.dean.api.stepdefs.theRequestBodyForWithIsAlreadySet(java.lang.String,java.lang.String)"},"keyword":"And "},{"result":{"duration":173020000,"status":"passed"},"line":102,"name":"send a \"POST\" request to the \"create\" endpoint","match":{"arguments":[{"val":"\"POST\"","offset":7},{"val":"\"create\"","offset":29}],"location":"com.dean.api.stepdefs.sendARequestToTheEndpoint(java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":112000,"status":"passed"},"line":103,"name":"the status code should be 400","match":{"arguments":[{"val":"400","offset":26}],"location":"com.dean.api.stepdefs.theStatusCodeShouldBe(int)"},"keyword":"Then "},{"result":{"duration":13028000,"status":"passed"},"line":104,"name":"the response body should contain:","match":{"location":"com.dean.api.stepdefs.theResponseBodyShouldContain(java.util.Map<java.lang.String, java.lang.String>)"},"rows":[{"cells":["error","BODY_NOT_VALID"]},{"cells":["data.title","`drs` is not a valid enum value for path `title`."]}],"keyword":"And "}],"tags":[{"name":"@api"},{"name":"@post-negative"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":1310000,"status":"passed"},"line":5,"name":"the request header is properly set up","match":{"location":"com.dean.api.stepdefs.theRequestHeaderIsProperlySetUp()"},"keyword":"Given "}]},{"start_timestamp":"2023-09-04T17:09:41.167Z","line":118,"name":"POST: create user with name(character) length boundaries","description":"","id":"post;post:-create-user-with-name(character)-length-boundaries;;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":124000,"status":"passed"},"line":111,"name":"the request body for \"POST/PUT\" with \"<MIN CHAR\" is prepared","match":{"arguments":[{"val":"\"POST/PUT\"","offset":21},{"val":"\"<MIN CHAR\"","offset":37}],"location":"com.dean.api.stepdefs.theRequestBodyForWithIsAlreadySet(java.lang.String,java.lang.String)"},"keyword":"And "},{"result":{"duration":195656000,"status":"passed"},"line":112,"name":"send a \"POST\" request to the \"create\" endpoint","match":{"arguments":[{"val":"\"POST\"","offset":7},{"val":"\"create\"","offset":29}],"location":"com.dean.api.stepdefs.sendARequestToTheEndpoint(java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":301000,"status":"passed"},"line":113,"name":"the status code should be 400","match":{"arguments":[{"val":"400","offset":26}],"location":"com.dean.api.stepdefs.theStatusCodeShouldBe(int)"},"keyword":"Then "},{"result":{"duration":26532000,"status":"passed"},"line":114,"name":"the response body should contain information that \"BODY_NOT_VALID\" and \"Path `firstName` (`a`) is shorter than the minimum allowed length (2).\"","match":{"arguments":[{"val":"\"BODY_NOT_VALID\"","offset":50},{"val":"\"Path `firstName` (`a`) is shorter than the minimum allowed length (2).\"","offset":71}],"location":"com.dean.api.stepdefs.theResponseBodyShouldContainInformation(java.lang.String,java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@api"},{"name":"@post-negative-boundaries"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":413000,"status":"passed"},"line":5,"name":"the request header is properly set up","match":{"location":"com.dean.api.stepdefs.theRequestHeaderIsProperlySetUp()"},"keyword":"Given "}]},{"start_timestamp":"2023-09-04T17:09:41.399Z","line":119,"name":"POST: create user with name(character) length boundaries","description":"","id":"post;post:-create-user-with-name(character)-length-boundaries;;3","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":150000,"status":"passed"},"line":111,"name":"the request body for \"POST/PUT\" with \">MAX CHAR\" is prepared","match":{"arguments":[{"val":"\"POST/PUT\"","offset":21},{"val":"\">MAX CHAR\"","offset":37}],"location":"com.dean.api.stepdefs.theRequestBodyForWithIsAlreadySet(java.lang.String,java.lang.String)"},"keyword":"And "},{"result":{"duration":138395000,"status":"passed"},"line":112,"name":"send a \"POST\" request to the \"create\" endpoint","match":{"arguments":[{"val":"\"POST\"","offset":7},{"val":"\"create\"","offset":29}],"location":"com.dean.api.stepdefs.sendARequestToTheEndpoint(java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":113000,"status":"passed"},"line":113,"name":"the status code should be 400","match":{"arguments":[{"val":"400","offset":26}],"location":"com.dean.api.stepdefs.theStatusCodeShouldBe(int)"},"keyword":"Then "},{"result":{"duration":13371000,"status":"passed"},"line":114,"name":"the response body should contain information that \"BODY_NOT_VALID\" and \"Path `firstName` (`aVeryVeryVeryVeryVeryLongFirstName`) is longer than the maximum allowed length (30).\"","match":{"arguments":[{"val":"\"BODY_NOT_VALID\"","offset":50},{"val":"\"Path `firstName` (`aVeryVeryVeryVeryVeryLongFirstName`) is longer than the maximum allowed length (30).\"","offset":71}],"location":"com.dean.api.stepdefs.theResponseBodyShouldContainInformation(java.lang.String,java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@api"},{"name":"@post-negative-boundaries"}]}],"name":"POST","description":"","id":"post","keyword":"Feature","uri":"file:src/test/resources/api/features/02_POST.feature","tags":[{"name":"@api","type":"Tag","location":{"line":1,"column":1}}]},{"line":2,"elements":[{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":318000,"status":"passed"},"line":5,"name":"the request header is properly set up","match":{"location":"com.dean.api.stepdefs.theRequestHeaderIsProperlySetUp()"},"keyword":"Given "}]},{"start_timestamp":"2023-09-04T17:09:41.559Z","line":8,"name":"PUT: update data user with valid data","description":"","id":"put;put:-update-data-user-with-valid-data","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":118000,"status":"passed"},"line":9,"name":"the request body for \"PUT\" with \"limited fields\" is prepared","match":{"arguments":[{"val":"\"PUT\"","offset":21},{"val":"\"limited fields\"","offset":32}],"location":"com.dean.api.stepdefs.theRequestBodyForWithIsAlreadySet(java.lang.String,java.lang.String)"},"keyword":"And "},{"result":{"duration":157769000,"status":"passed"},"line":10,"name":"send a \"PUT\" request to the \"user\" endpoint with id \"userId1\"","match":{"arguments":[{"val":"\"PUT\"","offset":7},{"val":"\"user\"","offset":28},{"val":"\"userId1\"","offset":52}],"location":"com.dean.api.stepdefs.sendARequestToTheEndpointWithId(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":99000,"status":"passed"},"line":11,"name":"the status code should be 200","match":{"arguments":[{"val":"200","offset":26}],"location":"com.dean.api.stepdefs.theStatusCodeShouldBe(int)"},"keyword":"Then "},{"result":{"duration":5604000,"status":"passed"},"line":12,"name":"all response should be match with \"post_put_user.json\"","match":{"arguments":[{"val":"\"post_put_user.json\"","offset":34}],"location":"com.dean.api.stepdefs.allResponseShouldBeMatchWith(java.lang.String)"},"keyword":"And "},{"result":{"duration":41792000,"status":"passed"},"line":13,"name":"the response body should contain important user details","match":{"location":"com.dean.api.stepdefs.theResponseBodyShouldContainImportantUserDetails()"},"keyword":"And "},{"result":{"duration":112689000,"status":"passed"},"line":14,"name":"the response body should not be empty","match":{"location":"com.dean.api.stepdefs.theResponseBodyShouldNotBeEmpty()"},"keyword":"And "},{"result":{"duration":85000,"status":"passed"},"line":15,"name":"the response body matches the \"completed fields\" request body","match":{"arguments":[{"val":"\"completed fields\"","offset":30}],"location":"com.dean.api.stepdefs.theResponseBodyMatchesTheRequestBody(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@api"},{"name":"@put-positive"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":318000,"status":"passed"},"line":5,"name":"the request header is properly set up","match":{"location":"com.dean.api.stepdefs.theRequestHeaderIsProperlySetUp()"},"keyword":"Given "}]},{"start_timestamp":"2023-09-04T17:09:41.883Z","line":18,"name":"PUT: modify data from limited to completed data fields","description":"","id":"put;put:-modify-data-from-limited-to-completed-data-fields","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":175000,"status":"passed"},"line":19,"name":"the request body for \"PUT\" with \"complete fields\" is prepared","match":{"arguments":[{"val":"\"PUT\"","offset":21},{"val":"\"complete fields\"","offset":32}],"location":"com.dean.api.stepdefs.theRequestBodyForWithIsAlreadySet(java.lang.String,java.lang.String)"},"keyword":"And "},{"result":{"duration":163321000,"status":"passed"},"line":20,"name":"send a \"PUT\" request to the \"user\" endpoint with id \"userId2\"","match":{"arguments":[{"val":"\"PUT\"","offset":7},{"val":"\"user\"","offset":28},{"val":"\"userId2\"","offset":52}],"location":"com.dean.api.stepdefs.sendARequestToTheEndpointWithId(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":118000,"status":"passed"},"line":21,"name":"the status code should be 200","match":{"arguments":[{"val":"200","offset":26}],"location":"com.dean.api.stepdefs.theStatusCodeShouldBe(int)"},"keyword":"Then "},{"result":{"duration":4990000,"status":"passed"},"line":22,"name":"all response should be match with \"post_put_user.json\"","match":{"arguments":[{"val":"\"post_put_user.json\"","offset":34}],"location":"com.dean.api.stepdefs.allResponseShouldBeMatchWith(java.lang.String)"},"keyword":"And "},{"result":{"duration":24031000,"status":"passed"},"line":23,"name":"the response body should contain important user details","match":{"location":"com.dean.api.stepdefs.theResponseBodyShouldContainImportantUserDetails()"},"keyword":"And "},{"result":{"duration":86495000,"status":"passed"},"line":24,"name":"the response body should not be empty","match":{"location":"com.dean.api.stepdefs.theResponseBodyShouldNotBeEmpty()"},"keyword":"And "},{"result":{"duration":394000,"status":"passed"},"line":25,"name":"the response body matches the \"completed fields\" request body","match":{"arguments":[{"val":"\"completed fields\"","offset":30}],"location":"com.dean.api.stepdefs.theResponseBodyMatchesTheRequestBody(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@api"},{"name":"@put-positive"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":326000,"status":"passed"},"line":5,"name":"the request header is properly set up","match":{"location":"com.dean.api.stepdefs.theRequestHeaderIsProperlySetUp()"},"keyword":"Given "}]},{"start_timestamp":"2023-09-04T17:09:42.168Z","line":29,"name":"PUT: verify email is forbidden to update","description":"","id":"put;put:-verify-email-is-forbidden-to-update","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":265000,"status":"passed"},"line":30,"name":"the request body is set to:","match":{"location":"com.dean.api.stepdefs.theRequestBodyIsSetTo(java.util.Map<java.lang.String, java.lang.String>)"},"rows":[{"cells":["firstName","dheana"]},{"cells":["lastName","faisyah"]},{"cells":["email","testing@example.com"]}],"keyword":"And "},{"result":{"duration":172071000,"status":"passed"},"line":34,"name":"send a \"PUT\" request to the \"user\" endpoint with id \"userId1\"","match":{"arguments":[{"val":"\"PUT\"","offset":7},{"val":"\"user\"","offset":28},{"val":"\"userId1\"","offset":52}],"location":"com.dean.api.stepdefs.sendARequestToTheEndpointWithId(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":106000,"status":"passed"},"line":35,"name":"the status code should be 200","match":{"arguments":[{"val":"200","offset":26}],"location":"com.dean.api.stepdefs.theStatusCodeShouldBe(int)"},"keyword":"Then "},{"result":{"duration":6484000,"status":"passed"},"line":36,"name":"all response should be match with \"post_put_user.json\"","match":{"arguments":[{"val":"\"post_put_user.json\"","offset":34}],"location":"com.dean.api.stepdefs.allResponseShouldBeMatchWith(java.lang.String)"},"keyword":"And "},{"result":{"duration":34067000,"status":"passed"},"line":37,"name":"the response body should contain important user details","match":{"location":"com.dean.api.stepdefs.theResponseBodyShouldContainImportantUserDetails()"},"keyword":"And "},{"result":{"duration":27085000,"status":"passed"},"line":38,"name":"the response body should contain:","match":{"location":"com.dean.api.stepdefs.theResponseBodyShouldContain(java.util.Map<java.lang.String, java.lang.String>)"},"rows":[{"cells":["firstName","dheana"]},{"cells":["lastName","faisyah"]},{"cells":["email","fdheana@example.com"]}],"keyword":"And "}],"tags":[{"name":"@api"},{"name":"@put-positive"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":337000,"status":"passed"},"line":5,"name":"the request header is properly set up","match":{"location":"com.dean.api.stepdefs.theRequestHeaderIsProperlySetUp()"},"keyword":"Given "}]},{"start_timestamp":"2023-09-04T17:09:42.415Z","line":45,"name":"PUT: update data user (firstName and lastName) into null","description":"","id":"put;put:-update-data-user-(firstname-and-lastname)-into-null","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":153000,"status":"passed"},"line":46,"name":"the request body for \"PUT\" with \"null fields\" is prepared","match":{"arguments":[{"val":"\"PUT\"","offset":21},{"val":"\"null fields\"","offset":32}],"location":"com.dean.api.stepdefs.theRequestBodyForWithIsAlreadySet(java.lang.String,java.lang.String)"},"keyword":"And "},{"result":{"duration":165057000,"status":"passed"},"line":47,"name":"send a \"PUT\" request to the \"user\" endpoint with id \"userId1\"","match":{"arguments":[{"val":"\"PUT\"","offset":7},{"val":"\"user\"","offset":28},{"val":"\"userId1\"","offset":52}],"location":"com.dean.api.stepdefs.sendARequestToTheEndpointWithId(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: expected:<400> but was:<200>\n\tat org.junit.Assert.fail(Assert.java:89)\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\n\tat org.junit.Assert.assertEquals(Assert.java:647)\n\tat org.junit.Assert.assertEquals(Assert.java:633)\n\tat com.dean.api.stepdefs.theStatusCodeShouldBe(stepdefs.java:61)\n\tat ✽.the status code should be 400(file:///home/runner/work/automation-web-api-finalproject/automation-web-api-finalproject/src/test/resources/api/features/03_PUT.feature:48)\n","duration":779000,"status":"failed"},"line":48,"name":"the status code should be 400","match":{"arguments":[{"val":"400","offset":26}],"location":"com.dean.api.stepdefs.theStatusCodeShouldBe(int)"},"keyword":"Then "},{"result":{"duration":3210000,"status":"skipped"},"line":49,"name":"the response body should contain:","match":{"location":"com.dean.api.stepdefs.theResponseBodyShouldContain(java.util.Map<java.lang.String, java.lang.String>)"},"rows":[{"cells":["error","BODY_NOT_VALID"]},{"cells":["data.firstName","Path `firstName` is required."]},{"cells":["data.lastName","Path `lastName` is required."]}],"keyword":"And "}],"tags":[{"name":"@api"},{"name":"@put-negative"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":368000,"status":"passed"},"line":5,"name":"the request header is properly set up","match":{"location":"com.dean.api.stepdefs.theRequestHeaderIsProperlySetUp()"},"keyword":"Given "}]},{"start_timestamp":"2023-09-04T17:09:42.593Z","line":64,"name":"PUT: update user with name(character) length boundaries","description":"","id":"put;put:-update-user-with-name(character)-length-boundaries;;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":105000,"status":"passed"},"line":57,"name":"the request body for \"POST/PUT\" with \"<MIN CHAR\" is prepared","match":{"arguments":[{"val":"\"POST/PUT\"","offset":21},{"val":"\"<MIN CHAR\"","offset":37}],"location":"com.dean.api.stepdefs.theRequestBodyForWithIsAlreadySet(java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":176586000,"status":"passed"},"line":58,"name":"send a \"PUT\" request to the \"user\" endpoint with id \"userId1\"","match":{"arguments":[{"val":"\"PUT\"","offset":7},{"val":"\"user\"","offset":28},{"val":"\"userId1\"","offset":52}],"location":"com.dean.api.stepdefs.sendARequestToTheEndpointWithId(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: expected:<400> but was:<200>\n\tat org.junit.Assert.fail(Assert.java:89)\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\n\tat org.junit.Assert.assertEquals(Assert.java:647)\n\tat org.junit.Assert.assertEquals(Assert.java:633)\n\tat com.dean.api.stepdefs.theStatusCodeShouldBe(stepdefs.java:61)\n\tat ✽.the status code should be 400(file:///home/runner/work/automation-web-api-finalproject/automation-web-api-finalproject/src/test/resources/api/features/03_PUT.feature:59)\n","duration":513000,"status":"failed"},"line":59,"name":"the status code should be 400","match":{"arguments":[{"val":"400","offset":26}],"location":"com.dean.api.stepdefs.theStatusCodeShouldBe(int)"},"keyword":"Then "},{"result":{"duration":50000,"status":"skipped"},"line":60,"name":"the response body should contain information that \"BODY_NOT_VALID\" and \"Path `firstName` (`a`) is shorter than the minimum allowed length (2).\"","match":{"arguments":[{"val":"\"BODY_NOT_VALID\"","offset":50},{"val":"\"Path `firstName` (`a`) is shorter than the minimum allowed length (2).\"","offset":71}],"location":"com.dean.api.stepdefs.theResponseBodyShouldContainInformation(java.lang.String,java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@api"},{"name":"@put-negative-boudaries"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":331000,"status":"passed"},"line":5,"name":"the request header is properly set up","match":{"location":"com.dean.api.stepdefs.theRequestHeaderIsProperlySetUp()"},"keyword":"Given "}]},{"start_timestamp":"2023-09-04T17:09:42.774Z","line":65,"name":"PUT: update user with name(character) length boundaries","description":"","id":"put;put:-update-user-with-name(character)-length-boundaries;;3","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":113000,"status":"passed"},"line":57,"name":"the request body for \"POST/PUT\" with \">MAX CHAR\" is prepared","match":{"arguments":[{"val":"\"POST/PUT\"","offset":21},{"val":"\">MAX CHAR\"","offset":37}],"location":"com.dean.api.stepdefs.theRequestBodyForWithIsAlreadySet(java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":158308000,"status":"passed"},"line":58,"name":"send a \"PUT\" request to the \"user\" endpoint with id \"userId1\"","match":{"arguments":[{"val":"\"PUT\"","offset":7},{"val":"\"user\"","offset":28},{"val":"\"userId1\"","offset":52}],"location":"com.dean.api.stepdefs.sendARequestToTheEndpointWithId(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: expected:<400> but was:<200>\n\tat org.junit.Assert.fail(Assert.java:89)\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\n\tat org.junit.Assert.assertEquals(Assert.java:647)\n\tat org.junit.Assert.assertEquals(Assert.java:633)\n\tat com.dean.api.stepdefs.theStatusCodeShouldBe(stepdefs.java:61)\n\tat ✽.the status code should be 400(file:///home/runner/work/automation-web-api-finalproject/automation-web-api-finalproject/src/test/resources/api/features/03_PUT.feature:59)\n","duration":499000,"status":"failed"},"line":59,"name":"the status code should be 400","match":{"arguments":[{"val":"400","offset":26}],"location":"com.dean.api.stepdefs.theStatusCodeShouldBe(int)"},"keyword":"Then "},{"result":{"duration":40000,"status":"skipped"},"line":60,"name":"the response body should contain information that \"BODY_NOT_VALID\" and \"Path `firstName` (`aVeryVeryVeryVeryVeryLongFirstName`) is longer than the maximum allowed length (30).\"","match":{"arguments":[{"val":"\"BODY_NOT_VALID\"","offset":50},{"val":"\"Path `firstName` (`aVeryVeryVeryVeryVeryLongFirstName`) is longer than the maximum allowed length (30).\"","offset":71}],"location":"com.dean.api.stepdefs.theResponseBodyShouldContainInformation(java.lang.String,java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@api"},{"name":"@put-negative-boudaries"}]}],"name":"PUT","description":"","id":"put","keyword":"Feature","uri":"file:src/test/resources/api/features/03_PUT.feature","tags":[{"name":"@api","type":"Tag","location":{"line":1,"column":1}}]},{"line":2,"elements":[{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":319000,"status":"passed"},"line":5,"name":"the request header is properly set up","match":{"location":"com.dean.api.stepdefs.theRequestHeaderIsProperlySetUp()"},"keyword":"Given "}]},{"start_timestamp":"2023-09-04T17:09:42.936Z","line":15,"name":"DELETE: delete data user with valid id","description":"","id":"delete;delete:-delete-data-user-with-valid-id;;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":167785000,"status":"passed"},"line":9,"name":"send a \"DELETE\" request to the \"user\" endpoint with id \"userId1\"","match":{"arguments":[{"val":"\"DELETE\"","offset":7},{"val":"\"user\"","offset":31},{"val":"\"userId1\"","offset":55}],"location":"com.dean.api.stepdefs.sendARequestToTheEndpointWithId(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":109000,"status":"passed"},"line":10,"name":"the status code should be 200","match":{"arguments":[{"val":"200","offset":26}],"location":"com.dean.api.stepdefs.theStatusCodeShouldBe(int)"},"keyword":"Then "},{"result":{"duration":2660000,"status":"passed"},"line":11,"name":"all response should be match with \"delete_user.json\"","match":{"arguments":[{"val":"\"delete_user.json\"","offset":34}],"location":"com.dean.api.stepdefs.allResponseShouldBeMatchWith(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@api"},{"name":"@delete-positive"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":315000,"status":"passed"},"line":5,"name":"the request header is properly set up","match":{"location":"com.dean.api.stepdefs.theRequestHeaderIsProperlySetUp()"},"keyword":"Given "}]},{"start_timestamp":"2023-09-04T17:09:43.110Z","line":16,"name":"DELETE: delete data user with valid id","description":"","id":"delete;delete:-delete-data-user-with-valid-id;;3","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":157317000,"status":"passed"},"line":9,"name":"send a \"DELETE\" request to the \"user\" endpoint with id \"userId2\"","match":{"arguments":[{"val":"\"DELETE\"","offset":7},{"val":"\"user\"","offset":31},{"val":"\"userId2\"","offset":55}],"location":"com.dean.api.stepdefs.sendARequestToTheEndpointWithId(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":132000,"status":"passed"},"line":10,"name":"the status code should be 200","match":{"arguments":[{"val":"200","offset":26}],"location":"com.dean.api.stepdefs.theStatusCodeShouldBe(int)"},"keyword":"Then "},{"result":{"duration":2063000,"status":"passed"},"line":11,"name":"all response should be match with \"delete_user.json\"","match":{"arguments":[{"val":"\"delete_user.json\"","offset":34}],"location":"com.dean.api.stepdefs.allResponseShouldBeMatchWith(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@api"},{"name":"@delete-positive"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":295000,"status":"passed"},"line":5,"name":"the request header is properly set up","match":{"location":"com.dean.api.stepdefs.theRequestHeaderIsProperlySetUp()"},"keyword":"Given "}]},{"start_timestamp":"2023-09-04T17:09:43.273Z","line":17,"name":"DELETE: delete data user with valid id","description":"","id":"delete;delete:-delete-data-user-with-valid-id;;4","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":156819000,"status":"passed"},"line":9,"name":"send a \"DELETE\" request to the \"user\" endpoint with id \"userId3\"","match":{"arguments":[{"val":"\"DELETE\"","offset":7},{"val":"\"user\"","offset":31},{"val":"\"userId3\"","offset":55}],"location":"com.dean.api.stepdefs.sendARequestToTheEndpointWithId(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":103000,"status":"passed"},"line":10,"name":"the status code should be 200","match":{"arguments":[{"val":"200","offset":26}],"location":"com.dean.api.stepdefs.theStatusCodeShouldBe(int)"},"keyword":"Then "},{"result":{"duration":3024000,"status":"passed"},"line":11,"name":"all response should be match with \"delete_user.json\"","match":{"arguments":[{"val":"\"delete_user.json\"","offset":34}],"location":"com.dean.api.stepdefs.allResponseShouldBeMatchWith(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@api"},{"name":"@delete-positive"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":305000,"status":"passed"},"line":5,"name":"the request header is properly set up","match":{"location":"com.dean.api.stepdefs.theRequestHeaderIsProperlySetUp()"},"keyword":"Given "}]},{"start_timestamp":"2023-09-04T17:09:43.436Z","line":18,"name":"DELETE: delete data user with valid id","description":"","id":"delete;delete:-delete-data-user-with-valid-id;;5","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":147845000,"status":"passed"},"line":9,"name":"send a \"DELETE\" request to the \"user\" endpoint with id \"userId4\"","match":{"arguments":[{"val":"\"DELETE\"","offset":7},{"val":"\"user\"","offset":31},{"val":"\"userId4\"","offset":55}],"location":"com.dean.api.stepdefs.sendARequestToTheEndpointWithId(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":100000,"status":"passed"},"line":10,"name":"the status code should be 200","match":{"arguments":[{"val":"200","offset":26}],"location":"com.dean.api.stepdefs.theStatusCodeShouldBe(int)"},"keyword":"Then "},{"result":{"duration":1975000,"status":"passed"},"line":11,"name":"all response should be match with \"delete_user.json\"","match":{"arguments":[{"val":"\"delete_user.json\"","offset":34}],"location":"com.dean.api.stepdefs.allResponseShouldBeMatchWith(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@api"},{"name":"@delete-positive"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":287000,"status":"passed"},"line":5,"name":"the request header is properly set up","match":{"location":"com.dean.api.stepdefs.theRequestHeaderIsProperlySetUp()"},"keyword":"Given "}]},{"start_timestamp":"2023-09-04T17:09:43.592Z","line":21,"name":"DELETE: delete data user with invalid id","description":"","id":"delete;delete:-delete-data-user-with-invalid-id","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":168504000,"status":"passed"},"line":22,"name":"send a \"DELETE\" request to the \"user\" endpoint with id \"userId5\"","match":{"arguments":[{"val":"\"DELETE\"","offset":7},{"val":"\"user\"","offset":31},{"val":"\"userId5\"","offset":55}],"location":"com.dean.api.stepdefs.sendARequestToTheEndpointWithId(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":92000,"status":"passed"},"line":23,"name":"the status code should be 400","match":{"arguments":[{"val":"400","offset":26}],"location":"com.dean.api.stepdefs.theStatusCodeShouldBe(int)"},"keyword":"Then "},{"result":{"duration":8993000,"status":"passed"},"line":24,"name":"the response body should contain:","match":{"location":"com.dean.api.stepdefs.theResponseBodyShouldContain(java.util.Map<java.lang.String, java.lang.String>)"},"rows":[{"cells":["error","PARAMS_NOT_VALID"]}],"keyword":"And "}],"tags":[{"name":"@api"},{"name":"@delete-negative"}]}],"name":"DELETE","description":"","id":"delete","keyword":"Feature","uri":"file:src/test/resources/api/features/04_DELETE.feature","tags":[{"name":"@api","type":"Tag","location":{"line":1,"column":1}}]},{"line":2,"elements":[{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":3340000,"status":"passed"},"line":5,"name":"the request header is properly set up","match":{"location":"com.dean.api.stepdefs.theRequestHeaderIsProperlySetUp()"},"keyword":"Given "}]},{"start_timestamp":"2023-09-04T17:09:43.772Z","line":8,"name":"GET: get list of tags","description":"","id":"tag;get:-get-list-of-tags","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":489329000,"status":"passed"},"line":9,"name":"send a \"GET\" request to the \"tag\" endpoint","match":{"arguments":[{"val":"\"GET\"","offset":7},{"val":"\"tag\"","offset":28}],"location":"com.dean.api.stepdefs.sendARequestToTheEndpoint(java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":116000,"status":"passed"},"line":10,"name":"the status code should be 200","match":{"arguments":[{"val":"200","offset":26}],"location":"com.dean.api.stepdefs.theStatusCodeShouldBe(int)"},"keyword":"Then "},{"result":{"duration":242649000,"status":"passed"},"line":11,"name":"all response should be match with \"get_list_tag.json\"","match":{"arguments":[{"val":"\"get_list_tag.json\"","offset":34}],"location":"com.dean.api.stepdefs.allResponseShouldBeMatchWith(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@api"},{"name":"@get-positive"}]}],"name":"TAG","description":"","id":"tag","keyword":"Feature","uri":"file:src/test/resources/api/features/05_TAG.feature","tags":[{"name":"@api","type":"Tag","location":{"line":1,"column":1}}]}]