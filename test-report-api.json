[{"line":2,"elements":[{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":449871000,"status":"passed"},"line":5,"name":"the request header is properly set up","match":{"location":"com.dean.api.stepdefs.theRequestHeaderIsProperlySetUp()"},"keyword":"Given "}]},{"start_timestamp":"2023-12-21T16:36:03.493Z","line":8,"name":"GET: get list of users","description":"","id":"get;get:-get-list-of-users","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1189288000,"status":"passed"},"line":9,"name":"send a \"GET\" request to the \"list\" endpoint","match":{"arguments":[{"val":"\"GET\"","offset":7},{"val":"\"list\"","offset":28}],"location":"com.dean.api.stepdefs.sendARequestToTheEndpoint(java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":1677000,"status":"passed"},"line":10,"name":"the status code should be 200","match":{"arguments":[{"val":"200","offset":26}],"location":"com.dean.api.stepdefs.theStatusCodeShouldBe(int)"},"keyword":"Then "},{"result":{"duration":354494000,"status":"passed"},"line":11,"name":"all response should be match with \"get_list_user.json\"","match":{"arguments":[{"val":"\"get_list_user.json\"","offset":34}],"location":"com.dean.api.stepdefs.allResponseShouldBeMatchWith(java.lang.String)"},"keyword":"And "},{"result":{"duration":480291000,"status":"passed"},"line":12,"name":"the limit and the page should be set to their default values","match":{"location":"com.dean.api.stepdefs.theLimitAndThePageShouldBeSetToTheirDefaultValues()"},"keyword":"And "}],"tags":[{"name":"@api"},{"name":"@get-positive"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":788000,"status":"passed"},"line":5,"name":"the request header is properly set up","match":{"location":"com.dean.api.stepdefs.theRequestHeaderIsProperlySetUp()"},"keyword":"Given "}]},{"start_timestamp":"2023-12-21T16:36:05.998Z","line":16,"name":"GET: get user full data by id","description":"","id":"get;get:-get-user-full-data-by-id","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":183544000,"status":"passed"},"line":17,"name":"send a \"GET\" request to the \"single\" endpoint with id \"60d0fe4f5311236168a109ca\"","match":{"arguments":[{"val":"\"GET\"","offset":7},{"val":"\"single\"","offset":28},{"val":"\"60d0fe4f5311236168a109ca\"","offset":54}],"location":"com.dean.api.stepdefs.sendARequestToTheEndpointWithId(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":136000,"status":"passed"},"line":18,"name":"the status code should be 200","match":{"arguments":[{"val":"200","offset":26}],"location":"com.dean.api.stepdefs.theStatusCodeShouldBe(int)"},"keyword":"Then "},{"result":{"duration":8045000,"status":"passed"},"line":19,"name":"all response should be match with \"get_single_user.json\"","match":{"arguments":[{"val":"\"get_single_user.json\"","offset":34}],"location":"com.dean.api.stepdefs.allResponseShouldBeMatchWith(java.lang.String)"},"keyword":"And "},{"result":{"duration":40825000,"status":"passed"},"line":20,"name":"the response body should contain important user details","match":{"location":"com.dean.api.stepdefs.theResponseBodyShouldContainImportantUserDetails()"},"keyword":"And "}],"tags":[{"name":"@api"},{"name":"@get-positive"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":1461000,"status":"passed"},"line":5,"name":"the request header is properly set up","match":{"location":"com.dean.api.stepdefs.theRequestHeaderIsProperlySetUp()"},"keyword":"Given "}]},{"start_timestamp":"2023-12-21T16:36:06.241Z","line":23,"name":"GET: get user full data with wrong id","description":"","id":"get;get:-get-user-full-data-with-wrong-id","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":135428000,"status":"passed"},"line":24,"name":"send a \"GET\" request to the \"single\" endpoint with id \"0123\"","match":{"arguments":[{"val":"\"GET\"","offset":7},{"val":"\"single\"","offset":28},{"val":"\"0123\"","offset":54}],"location":"com.dean.api.stepdefs.sendARequestToTheEndpointWithId(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":142000,"status":"passed"},"line":25,"name":"the status code should be 400","match":{"arguments":[{"val":"400","offset":26}],"location":"com.dean.api.stepdefs.theStatusCodeShouldBe(int)"},"keyword":"Then "},{"result":{"duration":24636000,"status":"passed"},"line":26,"name":"the response body should contain:","match":{"location":"com.dean.api.stepdefs.theResponseBodyShouldContain(java.util.Map<java.lang.String, java.lang.String>)"},"rows":[{"cells":["error","PARAMS_NOT_VALID"]}],"keyword":"And "}],"tags":[{"name":"@api"},{"name":"@get-negative"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":489000,"status":"passed"},"line":5,"name":"the request header is properly set up","match":{"location":"com.dean.api.stepdefs.theRequestHeaderIsProperlySetUp()"},"keyword":"Given "}]},{"start_timestamp":"2023-12-21T16:36:06.411Z","line":30,"name":"GET: get user full data with id containing \"-\"","description":"","id":"get;get:-get-user-full-data-with-id-containing-\"-\"","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":138731000,"status":"passed"},"line":31,"name":"send a \"GET\" request to the \"single\" endpoint with id \"-60d0fe4f5311236168a109ca\"","match":{"arguments":[{"val":"\"GET\"","offset":7},{"val":"\"single\"","offset":28},{"val":"\"-60d0fe4f5311236168a109ca\"","offset":54}],"location":"com.dean.api.stepdefs.sendARequestToTheEndpointWithId(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":177000,"status":"passed"},"line":32,"name":"the status code should be 400","match":{"arguments":[{"val":"400","offset":26}],"location":"com.dean.api.stepdefs.theStatusCodeShouldBe(int)"},"keyword":"Then "},{"result":{"duration":8422000,"status":"passed"},"line":33,"name":"the response body should contain:","match":{"location":"com.dean.api.stepdefs.theResponseBodyShouldContain(java.util.Map<java.lang.String, java.lang.String>)"},"rows":[{"cells":["error","PARAMS_NOT_VALID"]}],"keyword":"And "}],"tags":[{"name":"@api"},{"name":"@get-negative"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":513000,"status":"passed"},"line":5,"name":"the request header is properly set up","match":{"location":"com.dean.api.stepdefs.theRequestHeaderIsProperlySetUp()"},"keyword":"Given "}]},{"start_timestamp":"2023-12-21T16:36:06.566Z","line":52,"name":"GET: get list of users with valid 'limit' and 'page' boundary values","description":"","id":"get;get:-get-list-of-users-with-valid--limit--and--page--boundary-values;;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":21275000,"status":"passed"},"line":40,"name":"the request paramaters set to:","match":{"location":"com.dean.api.stepdefs.theRequestParamatersSetTo(java.util.Map<java.lang.String, java.lang.String>)"},"rows":[{"cells":["limit","5"]},{"cells":["page","0"]}],"keyword":"When "},{"result":{"duration":174001000,"status":"passed"},"line":43,"name":"send a \"GET\" request to the \"list\" endpoint","match":{"arguments":[{"val":"\"GET\"","offset":7},{"val":"\"list\"","offset":28}],"location":"com.dean.api.stepdefs.sendARequestToTheEndpoint(java.lang.String,java.lang.String)"},"keyword":"And "},{"result":{"duration":143000,"status":"passed"},"line":44,"name":"the status code should be 200","match":{"arguments":[{"val":"200","offset":26}],"location":"com.dean.api.stepdefs.theStatusCodeShouldBe(int)"},"keyword":"Then "},{"result":{"duration":14918000,"status":"passed"},"line":45,"name":"all response should be match with \"get_list_user.json\"","match":{"arguments":[{"val":"\"get_list_user.json\"","offset":34}],"location":"com.dean.api.stepdefs.allResponseShouldBeMatchWith(java.lang.String)"},"keyword":"And "},{"result":{"duration":19053000,"status":"passed"},"line":46,"name":"the response body should contain:","match":{"location":"com.dean.api.stepdefs.theResponseBodyShouldContain(java.util.Map<java.lang.String, java.lang.String>)"},"rows":[{"cells":["limit","5"]},{"cells":["page","0"]}],"keyword":"And "}],"tags":[{"name":"@api"},{"name":"@get-positive-boundaries"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":470000,"status":"passed"},"line":5,"name":"the request header is properly set up","match":{"location":"com.dean.api.stepdefs.theRequestHeaderIsProperlySetUp()"},"keyword":"Given "}]},{"start_timestamp":"2023-12-21T16:36:06.801Z","line":53,"name":"GET: get list of users with valid 'limit' and 'page' boundary values","description":"","id":"get;get:-get-list-of-users-with-valid--limit--and--page--boundary-values;;3","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":629000,"status":"passed"},"line":40,"name":"the request paramaters set to:","match":{"location":"com.dean.api.stepdefs.theRequestParamatersSetTo(java.util.Map<java.lang.String, java.lang.String>)"},"rows":[{"cells":["limit","50"]},{"cells":["page","999"]}],"keyword":"When "},{"result":{"duration":184796000,"status":"passed"},"line":43,"name":"send a \"GET\" request to the \"list\" endpoint","match":{"arguments":[{"val":"\"GET\"","offset":7},{"val":"\"list\"","offset":28}],"location":"com.dean.api.stepdefs.sendARequestToTheEndpoint(java.lang.String,java.lang.String)"},"keyword":"And "},{"result":{"duration":121000,"status":"passed"},"line":44,"name":"the status code should be 200","match":{"arguments":[{"val":"200","offset":26}],"location":"com.dean.api.stepdefs.theStatusCodeShouldBe(int)"},"keyword":"Then "},{"result":{"duration":8197000,"status":"passed"},"line":45,"name":"all response should be match with \"get_list_user.json\"","match":{"arguments":[{"val":"\"get_list_user.json\"","offset":34}],"location":"com.dean.api.stepdefs.allResponseShouldBeMatchWith(java.lang.String)"},"keyword":"And "},{"result":{"duration":16820000,"status":"passed"},"line":46,"name":"the response body should contain:","match":{"location":"com.dean.api.stepdefs.theResponseBodyShouldContain(java.util.Map<java.lang.String, java.lang.String>)"},"rows":[{"cells":["limit","50"]},{"cells":["page","999"]}],"keyword":"And "}],"tags":[{"name":"@api"},{"name":"@get-positive-boundaries"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":568000,"status":"passed"},"line":5,"name":"the request header is properly set up","match":{"location":"com.dean.api.stepdefs.theRequestHeaderIsProperlySetUp()"},"keyword":"Given "}]},{"start_timestamp":"2023-12-21T16:36:07.016Z","line":58,"name":"GET: get list of users with invalid 'limit' and 'page' boundary values","description":"","id":"get;get:-get-list-of-users-with-invalid--limit--and--page--boundary-values","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":613000,"status":"passed"},"line":59,"name":"the request paramaters set to:","match":{"location":"com.dean.api.stepdefs.theRequestParamatersSetTo(java.util.Map<java.lang.String, java.lang.String>)"},"rows":[{"cells":["limit","51"]},{"cells":["page","1000"]}],"keyword":"When "},{"result":{"duration":182764000,"status":"passed"},"line":62,"name":"send a \"GET\" request to the \"list\" endpoint","match":{"arguments":[{"val":"\"GET\"","offset":7},{"val":"\"list\"","offset":28}],"location":"com.dean.api.stepdefs.sendARequestToTheEndpoint(java.lang.String,java.lang.String)"},"keyword":"And "},{"result":{"error_message":"java.lang.AssertionError: expected:<400> but was:<200>\n\tat org.junit.Assert.fail(Assert.java:89)\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\n\tat org.junit.Assert.assertEquals(Assert.java:647)\n\tat org.junit.Assert.assertEquals(Assert.java:633)\n\tat com.dean.api.stepdefs.theStatusCodeShouldBe(stepdefs.java:61)\n\tat ✽.the status code should be 400(file:///home/runner/work/automation-web-api-finalproject/automation-web-api-finalproject/src/test/resources/api/features/01_GET.feature:63)\n","duration":2544000,"status":"failed"},"line":63,"name":"the status code should be 400","match":{"arguments":[{"val":"400","offset":26}],"location":"com.dean.api.stepdefs.theStatusCodeShouldBe(int)"},"keyword":"Then "},{"result":{"duration":95000,"status":"skipped"},"line":64,"name":"the response body should contain:","match":{"location":"com.dean.api.stepdefs.theResponseBodyShouldContain(java.util.Map<java.lang.String, java.lang.String>)"},"rows":[{"cells":["error","PARAMS_NOT_VALID"]}],"keyword":"And "}],"tags":[{"name":"@api"},{"name":"@get-negative-boundaries"}]}],"name":"GET","description":"","id":"get","keyword":"Feature","uri":"file:src/test/resources/api/features/01_GET.feature","tags":[{"name":"@api","type":"Tag","location":{"line":1,"column":1}}]},{"line":2,"elements":[{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":468000,"status":"passed"},"line":5,"name":"the request header is properly set up","match":{"location":"com.dean.api.stepdefs.theRequestHeaderIsProperlySetUp()"},"keyword":"Given "}]},{"start_timestamp":"2023-12-21T16:36:07.209Z","line":9,"name":"POST: create a new user with completed fields","description":"","id":"post;post:-create-a-new-user-with-completed-fields","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":2630000,"status":"passed"},"line":10,"name":"the request body for \"POST\" with \"complete fields\" is prepared","match":{"arguments":[{"val":"\"POST\"","offset":21},{"val":"\"complete fields\"","offset":33}],"location":"com.dean.api.stepdefs.theRequestBodyForWithIsAlreadySet(java.lang.String,java.lang.String)"},"keyword":"And "},{"result":{"duration":139314000,"status":"passed"},"line":11,"name":"send a \"POST\" request to the \"create\" endpoint","match":{"arguments":[{"val":"\"POST\"","offset":7},{"val":"\"create\"","offset":29}],"location":"com.dean.api.stepdefs.sendARequestToTheEndpoint(java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: expected:<200> but was:<400>\n\tat org.junit.Assert.fail(Assert.java:89)\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\n\tat org.junit.Assert.assertEquals(Assert.java:647)\n\tat org.junit.Assert.assertEquals(Assert.java:633)\n\tat com.dean.api.stepdefs.theStatusCodeShouldBe(stepdefs.java:61)\n\tat ✽.the status code should be 200(file:///home/runner/work/automation-web-api-finalproject/automation-web-api-finalproject/src/test/resources/api/features/02_POST.feature:12)\n","duration":551000,"status":"failed"},"line":12,"name":"the status code should be 200","match":{"arguments":[{"val":"200","offset":26}],"location":"com.dean.api.stepdefs.theStatusCodeShouldBe(int)"},"keyword":"Then "},{"result":{"duration":66000,"status":"skipped"},"line":13,"name":"all response should be match with \"post_put_user.json\"","match":{"arguments":[{"val":"\"post_put_user.json\"","offset":34}],"location":"com.dean.api.stepdefs.allResponseShouldBeMatchWith(java.lang.String)"},"keyword":"And "},{"result":{"duration":57000,"status":"skipped"},"line":14,"name":"the response body should contain important user details","match":{"location":"com.dean.api.stepdefs.theResponseBodyShouldContainImportantUserDetails()"},"keyword":"And "},{"result":{"duration":77000,"status":"skipped"},"line":15,"name":"the response body should not be empty","match":{"location":"com.dean.api.stepdefs.theResponseBodyShouldNotBeEmpty()"},"keyword":"And "},{"result":{"duration":55000,"status":"skipped"},"line":16,"name":"the response body matches the \"completed fields\" request body","match":{"arguments":[{"val":"\"completed fields\"","offset":30}],"location":"com.dean.api.stepdefs.theResponseBodyMatchesTheRequestBody(java.lang.String)"},"keyword":"And "},{"result":{"duration":68000,"status":"skipped"},"line":17,"name":"the response body \"id\" will be named as \"userId1\" and will be used for the next tests","match":{"arguments":[{"val":"\"id\"","offset":18},{"val":"\"userId1\"","offset":40}],"location":"com.dean.api.stepdefs.theResponseBodyIdWillBeNamedAsAndWillBeUsedForTheNextTests(java.lang.String,java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@api"},{"name":"@post-positive"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":494000,"status":"passed"},"line":5,"name":"the request header is properly set up","match":{"location":"com.dean.api.stepdefs.theRequestHeaderIsProperlySetUp()"},"keyword":"Given "}]},{"start_timestamp":"2023-12-21T16:36:07.364Z","line":21,"name":"POST: create a new user with limited fields","description":"","id":"post;post:-create-a-new-user-with-limited-fields","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":278000,"status":"passed"},"line":22,"name":"the request body for \"POST\" with \"limited fields\" is prepared","match":{"arguments":[{"val":"\"POST\"","offset":21},{"val":"\"limited fields\"","offset":33}],"location":"com.dean.api.stepdefs.theRequestBodyForWithIsAlreadySet(java.lang.String,java.lang.String)"},"keyword":"And "},{"result":{"duration":133014000,"status":"passed"},"line":23,"name":"send a \"POST\" request to the \"create\" endpoint","match":{"arguments":[{"val":"\"POST\"","offset":7},{"val":"\"create\"","offset":29}],"location":"com.dean.api.stepdefs.sendARequestToTheEndpoint(java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: expected:<200> but was:<400>\n\tat org.junit.Assert.fail(Assert.java:89)\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\n\tat org.junit.Assert.assertEquals(Assert.java:647)\n\tat org.junit.Assert.assertEquals(Assert.java:633)\n\tat com.dean.api.stepdefs.theStatusCodeShouldBe(stepdefs.java:61)\n\tat ✽.the status code should be 200(file:///home/runner/work/automation-web-api-finalproject/automation-web-api-finalproject/src/test/resources/api/features/02_POST.feature:24)\n","duration":578000,"status":"failed"},"line":24,"name":"the status code should be 200","match":{"arguments":[{"val":"200","offset":26}],"location":"com.dean.api.stepdefs.theStatusCodeShouldBe(int)"},"keyword":"Then "},{"result":{"duration":101000,"status":"skipped"},"line":25,"name":"all response should be match with \"post_user_limited.json\"","match":{"arguments":[{"val":"\"post_user_limited.json\"","offset":34}],"location":"com.dean.api.stepdefs.allResponseShouldBeMatchWith(java.lang.String)"},"keyword":"And "},{"result":{"duration":54000,"status":"skipped"},"line":26,"name":"the response body should contain important user details","match":{"location":"com.dean.api.stepdefs.theResponseBodyShouldContainImportantUserDetails()"},"keyword":"And "},{"result":{"duration":52000,"status":"skipped"},"line":27,"name":"the response body matches the \"limited fields\" request body","match":{"arguments":[{"val":"\"limited fields\"","offset":30}],"location":"com.dean.api.stepdefs.theResponseBodyMatchesTheRequestBody(java.lang.String)"},"keyword":"And "},{"result":{"duration":349000,"status":"skipped"},"line":28,"name":"the response body \"id\" will be named as \"userId2\" and will be used for the next tests","match":{"arguments":[{"val":"\"id\"","offset":18},{"val":"\"userId2\"","offset":40}],"location":"com.dean.api.stepdefs.theResponseBodyIdWillBeNamedAsAndWillBeUsedForTheNextTests(java.lang.String,java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@api"},{"name":"@post-positive"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":430000,"status":"passed"},"line":5,"name":"the request header is properly set up","match":{"location":"com.dean.api.stepdefs.theRequestHeaderIsProperlySetUp()"},"keyword":"Given "}]},{"start_timestamp":"2023-12-21T16:36:07.505Z","line":32,"name":"POST: create a new user with special characters on name fields","description":"","id":"post;post:-create-a-new-user-with-special-characters-on-name-fields","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":344000,"status":"passed"},"line":33,"name":"the request body is set to:","match":{"location":"com.dean.api.stepdefs.theRequestBodyIsSetTo(java.util.Map<java.lang.String, java.lang.String>)"},"rows":[{"cells":["firstName","#######"]},{"cells":["lastName","example"]},{"cells":["email","exampletest@gmail.com"]}],"keyword":"And "},{"result":{"duration":174763000,"status":"passed"},"line":37,"name":"send a \"POST\" request to the \"create\" endpoint","match":{"arguments":[{"val":"\"POST\"","offset":7},{"val":"\"create\"","offset":29}],"location":"com.dean.api.stepdefs.sendARequestToTheEndpoint(java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.NullPointerException\n\tat java.prefs/java.util.prefs.AbstractPreferences.put(AbstractPreferences.java:249)\n\tat com.dean.api.stepdefs.theResponseBodyIdWillBeNamedAsAndWillBeUsedForTheNextTests(stepdefs.java:233)\n\tat ✽.the response body \"id\" will be named as \"userId3\" and will be used for the next tests(file:///home/runner/work/automation-web-api-finalproject/automation-web-api-finalproject/src/test/resources/api/features/02_POST.feature:39)\n","duration":8759000,"status":"failed"},"line":39,"name":"the response body \"id\" will be named as \"userId3\" and will be used for the next tests","match":{"arguments":[{"val":"\"id\"","offset":18},{"val":"\"userId3\"","offset":40}],"location":"com.dean.api.stepdefs.theResponseBodyIdWillBeNamedAsAndWillBeUsedForTheNextTests(java.lang.String,java.lang.String)"},"keyword":"And "},{"result":{"duration":58000,"status":"skipped"},"line":41,"name":"the status code should be 400","match":{"arguments":[{"val":"400","offset":26}],"location":"com.dean.api.stepdefs.theStatusCodeShouldBe(int)"},"keyword":"Then "},{"result":{"duration":66000,"status":"skipped"},"line":42,"name":"the response body should contain:","match":{"location":"com.dean.api.stepdefs.theResponseBodyShouldContain(java.util.Map<java.lang.String, java.lang.String>)"},"rows":[{"cells":["error","BODY_NOT_VALID"]},{"cells":["data.firstName","firstName cannot contain special characters, use letters only"]}],"keyword":"And "}],"tags":[{"name":"@api"},{"name":"@post-negative"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":530000,"status":"passed"},"line":5,"name":"the request header is properly set up","match":{"location":"com.dean.api.stepdefs.theRequestHeaderIsProperlySetUp()"},"keyword":"Given "}]},{"start_timestamp":"2023-12-21T16:36:07.694Z","line":48,"name":"POST: create a new user with number on name fields","description":"","id":"post;post:-create-a-new-user-with-number-on-name-fields","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":307000,"status":"passed"},"line":49,"name":"the request body is set to:","match":{"location":"com.dean.api.stepdefs.theRequestBodyIsSetTo(java.util.Map<java.lang.String, java.lang.String>)"},"rows":[{"cells":["firstName","0000000"]},{"cells":["lastName","example"]},{"cells":["email","exampletest2@gmail.com"]}],"keyword":"And "},{"result":{"duration":5937428000,"status":"passed"},"line":53,"name":"send a \"POST\" request to the \"create\" endpoint","match":{"arguments":[{"val":"\"POST\"","offset":7},{"val":"\"create\"","offset":29}],"location":"com.dean.api.stepdefs.sendARequestToTheEndpoint(java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.NullPointerException\n\tat java.prefs/java.util.prefs.AbstractPreferences.put(AbstractPreferences.java:249)\n\tat com.dean.api.stepdefs.theResponseBodyIdWillBeNamedAsAndWillBeUsedForTheNextTests(stepdefs.java:236)\n\tat ✽.the response body \"id\" will be named as \"userId4\" and will be used for the next tests(file:///home/runner/work/automation-web-api-finalproject/automation-web-api-finalproject/src/test/resources/api/features/02_POST.feature:55)\n","duration":9617000,"status":"failed"},"line":55,"name":"the response body \"id\" will be named as \"userId4\" and will be used for the next tests","match":{"arguments":[{"val":"\"id\"","offset":18},{"val":"\"userId4\"","offset":40}],"location":"com.dean.api.stepdefs.theResponseBodyIdWillBeNamedAsAndWillBeUsedForTheNextTests(java.lang.String,java.lang.String)"},"keyword":"And "},{"result":{"duration":77000,"status":"skipped"},"line":57,"name":"the status code should be 400","match":{"arguments":[{"val":"400","offset":26}],"location":"com.dean.api.stepdefs.theStatusCodeShouldBe(int)"},"keyword":"Then "},{"result":{"duration":75000,"status":"skipped"},"line":58,"name":"the response body should contain:","match":{"location":"com.dean.api.stepdefs.theResponseBodyShouldContain(java.util.Map<java.lang.String, java.lang.String>)"},"rows":[{"cells":["error","BODY_NOT_VALID"]},{"cells":["data.firstName","firstName cannot contain number, use letters only"]}],"keyword":"And "}],"tags":[{"name":"@api"},{"name":"@post-negative"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":472000,"status":"passed"},"line":5,"name":"the request header is properly set up","match":{"location":"com.dean.api.stepdefs.theRequestHeaderIsProperlySetUp()"},"keyword":"Given "}]},{"start_timestamp":"2023-12-21T16:36:13.647Z","line":63,"name":"POST: create a new user with existing email","description":"","id":"post;post:-create-a-new-user-with-existing-email","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":274000,"status":"passed"},"line":64,"name":"the request body is set to:","match":{"location":"com.dean.api.stepdefs.theRequestBodyIsSetTo(java.util.Map<java.lang.String, java.lang.String>)"},"rows":[{"cells":["firstName","faisyah"]},{"cells":["lastName","dheana"]},{"cells":["email","fdheana@example.com"]}],"keyword":"And "},{"result":{"duration":126521000,"status":"passed"},"line":68,"name":"send a \"POST\" request to the \"create\" endpoint","match":{"arguments":[{"val":"\"POST\"","offset":7},{"val":"\"create\"","offset":29}],"location":"com.dean.api.stepdefs.sendARequestToTheEndpoint(java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":96000,"status":"passed"},"line":69,"name":"the status code should be 400","match":{"arguments":[{"val":"400","offset":26}],"location":"com.dean.api.stepdefs.theStatusCodeShouldBe(int)"},"keyword":"Then "},{"result":{"duration":19408000,"status":"passed"},"line":70,"name":"the response body should contain:","match":{"location":"com.dean.api.stepdefs.theResponseBodyShouldContain(java.util.Map<java.lang.String, java.lang.String>)"},"rows":[{"cells":["error","BODY_NOT_VALID"]},{"cells":["data.email","Email already used"]}],"keyword":"And "}],"tags":[{"name":"@api"},{"name":"@post-negative"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":476000,"status":"passed"},"line":5,"name":"the request header is properly set up","match":{"location":"com.dean.api.stepdefs.theRequestHeaderIsProperlySetUp()"},"keyword":"Given "}]},{"start_timestamp":"2023-12-21T16:36:13.797Z","line":75,"name":"POST: create a new user without '@' on email","description":"","id":"post;post:-create-a-new-user-without--@--on-email","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":405000,"status":"passed"},"line":76,"name":"the request body is set to:","match":{"location":"com.dean.api.stepdefs.theRequestBodyIsSetTo(java.util.Map<java.lang.String, java.lang.String>)"},"rows":[{"cells":["firstName","faisyah"]},{"cells":["lastName","dheana"]},{"cells":["email","fdheanagmail.com"]}],"keyword":"And "},{"result":{"duration":105887000,"status":"passed"},"line":80,"name":"send a \"POST\" request to the \"create\" endpoint","match":{"arguments":[{"val":"\"POST\"","offset":7},{"val":"\"create\"","offset":29}],"location":"com.dean.api.stepdefs.sendARequestToTheEndpoint(java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":103000,"status":"passed"},"line":81,"name":"the status code should be 400","match":{"arguments":[{"val":"400","offset":26}],"location":"com.dean.api.stepdefs.theStatusCodeShouldBe(int)"},"keyword":"Then "},{"result":{"duration":15805000,"status":"passed"},"line":82,"name":"the response body should contain:","match":{"location":"com.dean.api.stepdefs.theResponseBodyShouldContain(java.util.Map<java.lang.String, java.lang.String>)"},"rows":[{"cells":["error","BODY_NOT_VALID"]},{"cells":["data.email","Path `email` is invalid (fdheanagmail.com)."]}],"keyword":"And "}],"tags":[{"name":"@api"},{"name":"@post-negative"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":431000,"status":"passed"},"line":5,"name":"the request header is properly set up","match":{"location":"com.dean.api.stepdefs.theRequestHeaderIsProperlySetUp()"},"keyword":"Given "}]},{"start_timestamp":"2023-12-21T16:36:13.924Z","line":88,"name":"POST: create a new user with incomplete required field","description":"","id":"post;post:-create-a-new-user-with-incomplete-required-field","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":212000,"status":"passed"},"line":89,"name":"the request body is set to:","match":{"location":"com.dean.api.stepdefs.theRequestBodyIsSetTo(java.util.Map<java.lang.String, java.lang.String>)"},"rows":[{"cells":["firstName","faisyah"]}],"keyword":"And "},{"result":{"duration":112496000,"status":"passed"},"line":91,"name":"send a \"POST\" request to the \"create\" endpoint","match":{"arguments":[{"val":"\"POST\"","offset":7},{"val":"\"create\"","offset":29}],"location":"com.dean.api.stepdefs.sendARequestToTheEndpoint(java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":93000,"status":"passed"},"line":92,"name":"the status code should be 400","match":{"arguments":[{"val":"400","offset":26}],"location":"com.dean.api.stepdefs.theStatusCodeShouldBe(int)"},"keyword":"Then "},{"result":{"duration":20909000,"status":"passed"},"line":93,"name":"the response body should contain:","match":{"location":"com.dean.api.stepdefs.theResponseBodyShouldContain(java.util.Map<java.lang.String, java.lang.String>)"},"rows":[{"cells":["error","BODY_NOT_VALID"]},{"cells":["data.email","Path `email` is required."]},{"cells":["data.lastName","Path `lastName` is required."]}],"keyword":"And "}],"tags":[{"name":"@api"},{"name":"@post-negative"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":508000,"status":"passed"},"line":5,"name":"the request header is properly set up","match":{"location":"com.dean.api.stepdefs.theRequestHeaderIsProperlySetUp()"},"keyword":"Given "}]},{"start_timestamp":"2023-12-21T16:36:14.061Z","line":100,"name":"POST: create a new user with invalid data (title: drs)","description":"","id":"post;post:-create-a-new-user-with-invalid-data-(title:-drs)","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":195000,"status":"passed"},"line":101,"name":"the request body for \"POST\" with \"invalid fields\" is prepared","match":{"arguments":[{"val":"\"POST\"","offset":21},{"val":"\"invalid fields\"","offset":33}],"location":"com.dean.api.stepdefs.theRequestBodyForWithIsAlreadySet(java.lang.String,java.lang.String)"},"keyword":"And "},{"result":{"duration":113905000,"status":"passed"},"line":102,"name":"send a \"POST\" request to the \"create\" endpoint","match":{"arguments":[{"val":"\"POST\"","offset":7},{"val":"\"create\"","offset":29}],"location":"com.dean.api.stepdefs.sendARequestToTheEndpoint(java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":144000,"status":"passed"},"line":103,"name":"the status code should be 400","match":{"arguments":[{"val":"400","offset":26}],"location":"com.dean.api.stepdefs.theStatusCodeShouldBe(int)"},"keyword":"Then "},{"result":{"duration":13797000,"status":"passed"},"line":104,"name":"the response body should contain:","match":{"location":"com.dean.api.stepdefs.theResponseBodyShouldContain(java.util.Map<java.lang.String, java.lang.String>)"},"rows":[{"cells":["error","BODY_NOT_VALID"]},{"cells":["data.title","`drs` is not a valid enum value for path `title`."]}],"keyword":"And "}],"tags":[{"name":"@api"},{"name":"@post-negative"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":1583000,"status":"passed"},"line":5,"name":"the request header is properly set up","match":{"location":"com.dean.api.stepdefs.theRequestHeaderIsProperlySetUp()"},"keyword":"Given "}]},{"start_timestamp":"2023-12-21T16:36:14.194Z","line":118,"name":"POST: create user with name(character) length boundaries","description":"","id":"post;post:-create-user-with-name(character)-length-boundaries;;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":137000,"status":"passed"},"line":111,"name":"the request body for \"POST/PUT\" with \"<MIN CHAR\" is prepared","match":{"arguments":[{"val":"\"POST/PUT\"","offset":21},{"val":"\"<MIN CHAR\"","offset":37}],"location":"com.dean.api.stepdefs.theRequestBodyForWithIsAlreadySet(java.lang.String,java.lang.String)"},"keyword":"And "},{"result":{"duration":116654000,"status":"passed"},"line":112,"name":"send a \"POST\" request to the \"create\" endpoint","match":{"arguments":[{"val":"\"POST\"","offset":7},{"val":"\"create\"","offset":29}],"location":"com.dean.api.stepdefs.sendARequestToTheEndpoint(java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":84000,"status":"passed"},"line":113,"name":"the status code should be 400","match":{"arguments":[{"val":"400","offset":26}],"location":"com.dean.api.stepdefs.theStatusCodeShouldBe(int)"},"keyword":"Then "},{"result":{"duration":13647000,"status":"passed"},"line":114,"name":"the response body should contain information that \"BODY_NOT_VALID\" and \"Path `firstName` (`a`) is shorter than the minimum allowed length (2).\"","match":{"arguments":[{"val":"\"BODY_NOT_VALID\"","offset":50},{"val":"\"Path `firstName` (`a`) is shorter than the minimum allowed length (2).\"","offset":71}],"location":"com.dean.api.stepdefs.theResponseBodyShouldContainInformation(java.lang.String,java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@api"},{"name":"@post-negative-boundaries"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":459000,"status":"passed"},"line":5,"name":"the request header is properly set up","match":{"location":"com.dean.api.stepdefs.theRequestHeaderIsProperlySetUp()"},"keyword":"Given "}]},{"start_timestamp":"2023-12-21T16:36:14.330Z","line":119,"name":"POST: create user with name(character) length boundaries","description":"","id":"post;post:-create-user-with-name(character)-length-boundaries;;3","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":161000,"status":"passed"},"line":111,"name":"the request body for \"POST/PUT\" with \">MAX CHAR\" is prepared","match":{"arguments":[{"val":"\"POST/PUT\"","offset":21},{"val":"\">MAX CHAR\"","offset":37}],"location":"com.dean.api.stepdefs.theRequestBodyForWithIsAlreadySet(java.lang.String,java.lang.String)"},"keyword":"And "},{"result":{"duration":107209000,"status":"passed"},"line":112,"name":"send a \"POST\" request to the \"create\" endpoint","match":{"arguments":[{"val":"\"POST\"","offset":7},{"val":"\"create\"","offset":29}],"location":"com.dean.api.stepdefs.sendARequestToTheEndpoint(java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":133000,"status":"passed"},"line":113,"name":"the status code should be 400","match":{"arguments":[{"val":"400","offset":26}],"location":"com.dean.api.stepdefs.theStatusCodeShouldBe(int)"},"keyword":"Then "},{"result":{"duration":16627000,"status":"passed"},"line":114,"name":"the response body should contain information that \"BODY_NOT_VALID\" and \"Path `firstName` (`aVeryVeryVeryVeryVeryLongFirstName`) is longer than the maximum allowed length (30).\"","match":{"arguments":[{"val":"\"BODY_NOT_VALID\"","offset":50},{"val":"\"Path `firstName` (`aVeryVeryVeryVeryVeryLongFirstName`) is longer than the maximum allowed length (30).\"","offset":71}],"location":"com.dean.api.stepdefs.theResponseBodyShouldContainInformation(java.lang.String,java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@api"},{"name":"@post-negative-boundaries"}]}],"name":"POST","description":"","id":"post","keyword":"Feature","uri":"file:src/test/resources/api/features/02_POST.feature","tags":[{"name":"@api","type":"Tag","location":{"line":1,"column":1}}]},{"line":2,"elements":[{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":390000,"status":"passed"},"line":5,"name":"the request header is properly set up","match":{"location":"com.dean.api.stepdefs.theRequestHeaderIsProperlySetUp()"},"keyword":"Given "}]},{"start_timestamp":"2023-12-21T16:36:14.458Z","line":8,"name":"PUT: update data user with valid data","description":"","id":"put;put:-update-data-user-with-valid-data","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":122000,"status":"passed"},"line":9,"name":"the request body for \"PUT\" with \"limited fields\" is prepared","match":{"arguments":[{"val":"\"PUT\"","offset":21},{"val":"\"limited fields\"","offset":32}],"location":"com.dean.api.stepdefs.theRequestBodyForWithIsAlreadySet(java.lang.String,java.lang.String)"},"keyword":"And "},{"result":{"duration":108482000,"status":"passed"},"line":10,"name":"send a \"PUT\" request to the \"user\" endpoint with id \"userId1\"","match":{"arguments":[{"val":"\"PUT\"","offset":7},{"val":"\"user\"","offset":28},{"val":"\"userId1\"","offset":52}],"location":"com.dean.api.stepdefs.sendARequestToTheEndpointWithId(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: expected:<200> but was:<400>\n\tat org.junit.Assert.fail(Assert.java:89)\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\n\tat org.junit.Assert.assertEquals(Assert.java:647)\n\tat org.junit.Assert.assertEquals(Assert.java:633)\n\tat com.dean.api.stepdefs.theStatusCodeShouldBe(stepdefs.java:61)\n\tat ✽.the status code should be 200(file:///home/runner/work/automation-web-api-finalproject/automation-web-api-finalproject/src/test/resources/api/features/03_PUT.feature:11)\n","duration":628000,"status":"failed"},"line":11,"name":"the status code should be 200","match":{"arguments":[{"val":"200","offset":26}],"location":"com.dean.api.stepdefs.theStatusCodeShouldBe(int)"},"keyword":"Then "},{"result":{"duration":52000,"status":"skipped"},"line":12,"name":"all response should be match with \"post_put_user.json\"","match":{"arguments":[{"val":"\"post_put_user.json\"","offset":34}],"location":"com.dean.api.stepdefs.allResponseShouldBeMatchWith(java.lang.String)"},"keyword":"And "},{"result":{"duration":48000,"status":"skipped"},"line":13,"name":"the response body should contain important user details","match":{"location":"com.dean.api.stepdefs.theResponseBodyShouldContainImportantUserDetails()"},"keyword":"And "},{"result":{"duration":46000,"status":"skipped"},"line":14,"name":"the response body should not be empty","match":{"location":"com.dean.api.stepdefs.theResponseBodyShouldNotBeEmpty()"},"keyword":"And "},{"result":{"duration":47000,"status":"skipped"},"line":15,"name":"the response body matches the \"completed fields\" request body","match":{"arguments":[{"val":"\"completed fields\"","offset":30}],"location":"com.dean.api.stepdefs.theResponseBodyMatchesTheRequestBody(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@api"},{"name":"@put-positive"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":413000,"status":"passed"},"line":5,"name":"the request header is properly set up","match":{"location":"com.dean.api.stepdefs.theRequestHeaderIsProperlySetUp()"},"keyword":"Given "}]},{"start_timestamp":"2023-12-21T16:36:14.574Z","line":18,"name":"PUT: modify data from limited to completed data fields","description":"","id":"put;put:-modify-data-from-limited-to-completed-data-fields","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":181000,"status":"passed"},"line":19,"name":"the request body for \"PUT\" with \"complete fields\" is prepared","match":{"arguments":[{"val":"\"PUT\"","offset":21},{"val":"\"complete fields\"","offset":32}],"location":"com.dean.api.stepdefs.theRequestBodyForWithIsAlreadySet(java.lang.String,java.lang.String)"},"keyword":"And "},{"result":{"duration":114944000,"status":"passed"},"line":20,"name":"send a \"PUT\" request to the \"user\" endpoint with id \"userId2\"","match":{"arguments":[{"val":"\"PUT\"","offset":7},{"val":"\"user\"","offset":28},{"val":"\"userId2\"","offset":52}],"location":"com.dean.api.stepdefs.sendARequestToTheEndpointWithId(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: expected:<200> but was:<400>\n\tat org.junit.Assert.fail(Assert.java:89)\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\n\tat org.junit.Assert.assertEquals(Assert.java:647)\n\tat org.junit.Assert.assertEquals(Assert.java:633)\n\tat com.dean.api.stepdefs.theStatusCodeShouldBe(stepdefs.java:61)\n\tat ✽.the status code should be 200(file:///home/runner/work/automation-web-api-finalproject/automation-web-api-finalproject/src/test/resources/api/features/03_PUT.feature:21)\n","duration":495000,"status":"failed"},"line":21,"name":"the status code should be 200","match":{"arguments":[{"val":"200","offset":26}],"location":"com.dean.api.stepdefs.theStatusCodeShouldBe(int)"},"keyword":"Then "},{"result":{"duration":49000,"status":"skipped"},"line":22,"name":"all response should be match with \"post_put_user.json\"","match":{"arguments":[{"val":"\"post_put_user.json\"","offset":34}],"location":"com.dean.api.stepdefs.allResponseShouldBeMatchWith(java.lang.String)"},"keyword":"And "},{"result":{"duration":52000,"status":"skipped"},"line":23,"name":"the response body should contain important user details","match":{"location":"com.dean.api.stepdefs.theResponseBodyShouldContainImportantUserDetails()"},"keyword":"And "},{"result":{"duration":52000,"status":"skipped"},"line":24,"name":"the response body should not be empty","match":{"location":"com.dean.api.stepdefs.theResponseBodyShouldNotBeEmpty()"},"keyword":"And "},{"result":{"duration":31000,"status":"skipped"},"line":25,"name":"the response body matches the \"completed fields\" request body","match":{"arguments":[{"val":"\"completed fields\"","offset":30}],"location":"com.dean.api.stepdefs.theResponseBodyMatchesTheRequestBody(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@api"},{"name":"@put-positive"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":345000,"status":"passed"},"line":5,"name":"the request header is properly set up","match":{"location":"com.dean.api.stepdefs.theRequestHeaderIsProperlySetUp()"},"keyword":"Given "}]},{"start_timestamp":"2023-12-21T16:36:14.694Z","line":29,"name":"PUT: verify email is forbidden to update","description":"","id":"put;put:-verify-email-is-forbidden-to-update","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":223000,"status":"passed"},"line":30,"name":"the request body is set to:","match":{"location":"com.dean.api.stepdefs.theRequestBodyIsSetTo(java.util.Map<java.lang.String, java.lang.String>)"},"rows":[{"cells":["firstName","dheana"]},{"cells":["lastName","faisyah"]},{"cells":["email","testing@example.com"]}],"keyword":"And "},{"result":{"duration":109746000,"status":"passed"},"line":34,"name":"send a \"PUT\" request to the \"user\" endpoint with id \"userId1\"","match":{"arguments":[{"val":"\"PUT\"","offset":7},{"val":"\"user\"","offset":28},{"val":"\"userId1\"","offset":52}],"location":"com.dean.api.stepdefs.sendARequestToTheEndpointWithId(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: expected:<200> but was:<400>\n\tat org.junit.Assert.fail(Assert.java:89)\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\n\tat org.junit.Assert.assertEquals(Assert.java:647)\n\tat org.junit.Assert.assertEquals(Assert.java:633)\n\tat com.dean.api.stepdefs.theStatusCodeShouldBe(stepdefs.java:61)\n\tat ✽.the status code should be 200(file:///home/runner/work/automation-web-api-finalproject/automation-web-api-finalproject/src/test/resources/api/features/03_PUT.feature:35)\n","duration":432000,"status":"failed"},"line":35,"name":"the status code should be 200","match":{"arguments":[{"val":"200","offset":26}],"location":"com.dean.api.stepdefs.theStatusCodeShouldBe(int)"},"keyword":"Then "},{"result":{"duration":47000,"status":"skipped"},"line":36,"name":"all response should be match with \"post_put_user.json\"","match":{"arguments":[{"val":"\"post_put_user.json\"","offset":34}],"location":"com.dean.api.stepdefs.allResponseShouldBeMatchWith(java.lang.String)"},"keyword":"And "},{"result":{"duration":46000,"status":"skipped"},"line":37,"name":"the response body should contain important user details","match":{"location":"com.dean.api.stepdefs.theResponseBodyShouldContainImportantUserDetails()"},"keyword":"And "},{"result":{"duration":68000,"status":"skipped"},"line":38,"name":"the response body should contain:","match":{"location":"com.dean.api.stepdefs.theResponseBodyShouldContain(java.util.Map<java.lang.String, java.lang.String>)"},"rows":[{"cells":["firstName","dheana"]},{"cells":["lastName","faisyah"]},{"cells":["email","fdheana@example.com"]}],"keyword":"And "}],"tags":[{"name":"@api"},{"name":"@put-positive"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":322000,"status":"passed"},"line":5,"name":"the request header is properly set up","match":{"location":"com.dean.api.stepdefs.theRequestHeaderIsProperlySetUp()"},"keyword":"Given "}]},{"start_timestamp":"2023-12-21T16:36:14.809Z","line":45,"name":"PUT: update data user (firstName and lastName) into null","description":"","id":"put;put:-update-data-user-(firstname-and-lastname)-into-null","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":134000,"status":"passed"},"line":46,"name":"the request body for \"PUT\" with \"null fields\" is prepared","match":{"arguments":[{"val":"\"PUT\"","offset":21},{"val":"\"null fields\"","offset":32}],"location":"com.dean.api.stepdefs.theRequestBodyForWithIsAlreadySet(java.lang.String,java.lang.String)"},"keyword":"And "},{"result":{"duration":118678000,"status":"passed"},"line":47,"name":"send a \"PUT\" request to the \"user\" endpoint with id \"userId1\"","match":{"arguments":[{"val":"\"PUT\"","offset":7},{"val":"\"user\"","offset":28},{"val":"\"userId1\"","offset":52}],"location":"com.dean.api.stepdefs.sendARequestToTheEndpointWithId(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":114000,"status":"passed"},"line":48,"name":"the status code should be 400","match":{"arguments":[{"val":"400","offset":26}],"location":"com.dean.api.stepdefs.theStatusCodeShouldBe(int)"},"keyword":"Then "},{"result":{"error_message":"java.lang.AssertionError: \nExpected: \"BODY_NOT_VALID\"\n     but: was \"PARAMS_NOT_VALID\"\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)\n\tat com.dean.api.stepdefs.theResponseBodyShouldContain(stepdefs.java:138)\n\tat ✽.the response body should contain:(file:///home/runner/work/automation-web-api-finalproject/automation-web-api-finalproject/src/test/resources/api/features/03_PUT.feature:49)\n","duration":9130000,"status":"failed"},"line":49,"name":"the response body should contain:","match":{"location":"com.dean.api.stepdefs.theResponseBodyShouldContain(java.util.Map<java.lang.String, java.lang.String>)"},"rows":[{"cells":["error","BODY_NOT_VALID"]},{"cells":["data.firstName","Path `firstName` is required."]},{"cells":["data.lastName","Path `lastName` is required."]}],"keyword":"And "}],"tags":[{"name":"@api"},{"name":"@put-negative"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":402000,"status":"passed"},"line":5,"name":"the request header is properly set up","match":{"location":"com.dean.api.stepdefs.theRequestHeaderIsProperlySetUp()"},"keyword":"Given "}]},{"start_timestamp":"2023-12-21T16:36:14.940Z","line":64,"name":"PUT: update user with name(character) length boundaries","description":"","id":"put;put:-update-user-with-name(character)-length-boundaries;;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":109000,"status":"passed"},"line":57,"name":"the request body for \"POST/PUT\" with \"<MIN CHAR\" is prepared","match":{"arguments":[{"val":"\"POST/PUT\"","offset":21},{"val":"\"<MIN CHAR\"","offset":37}],"location":"com.dean.api.stepdefs.theRequestBodyForWithIsAlreadySet(java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":104642000,"status":"passed"},"line":58,"name":"send a \"PUT\" request to the \"user\" endpoint with id \"userId1\"","match":{"arguments":[{"val":"\"PUT\"","offset":7},{"val":"\"user\"","offset":28},{"val":"\"userId1\"","offset":52}],"location":"com.dean.api.stepdefs.sendARequestToTheEndpointWithId(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":127000,"status":"passed"},"line":59,"name":"the status code should be 400","match":{"arguments":[{"val":"400","offset":26}],"location":"com.dean.api.stepdefs.theStatusCodeShouldBe(int)"},"keyword":"Then "},{"result":{"error_message":"java.lang.AssertionError: 1 expectation failed.\nJSON path error doesn't match.\nExpected: BODY_NOT_VALID\n  Actual: PARAMS_NOT_VALID\n\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)\n\tat org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)\n\tat io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)\n\tat io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)\n\tat io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:270)\n\tat io.restassured.specification.ResponseSpecification$body$0.callCurrent(Unknown Source)\n\tat io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:117)\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:244)\n\tat com.dean.api.stepdefs.theResponseBodyShouldContainInformation(stepdefs.java:180)\n\tat ✽.the response body should contain information that \"BODY_NOT_VALID\" and \"Path `firstName` (`a`) is shorter than the minimum allowed length (2).\"(file:///home/runner/work/automation-web-api-finalproject/automation-web-api-finalproject/src/test/resources/api/features/03_PUT.feature:60)\n","duration":15786000,"status":"failed"},"line":60,"name":"the response body should contain information that \"BODY_NOT_VALID\" and \"Path `firstName` (`a`) is shorter than the minimum allowed length (2).\"","match":{"arguments":[{"val":"\"BODY_NOT_VALID\"","offset":50},{"val":"\"Path `firstName` (`a`) is shorter than the minimum allowed length (2).\"","offset":71}],"location":"com.dean.api.stepdefs.theResponseBodyShouldContainInformation(java.lang.String,java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@api"},{"name":"@put-negative-boudaries"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":385000,"status":"passed"},"line":5,"name":"the request header is properly set up","match":{"location":"com.dean.api.stepdefs.theRequestHeaderIsProperlySetUp()"},"keyword":"Given "}]},{"start_timestamp":"2023-12-21T16:36:15.066Z","line":65,"name":"PUT: update user with name(character) length boundaries","description":"","id":"put;put:-update-user-with-name(character)-length-boundaries;;3","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":121000,"status":"passed"},"line":57,"name":"the request body for \"POST/PUT\" with \">MAX CHAR\" is prepared","match":{"arguments":[{"val":"\"POST/PUT\"","offset":21},{"val":"\">MAX CHAR\"","offset":37}],"location":"com.dean.api.stepdefs.theRequestBodyForWithIsAlreadySet(java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":107619000,"status":"passed"},"line":58,"name":"send a \"PUT\" request to the \"user\" endpoint with id \"userId1\"","match":{"arguments":[{"val":"\"PUT\"","offset":7},{"val":"\"user\"","offset":28},{"val":"\"userId1\"","offset":52}],"location":"com.dean.api.stepdefs.sendARequestToTheEndpointWithId(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":126000,"status":"passed"},"line":59,"name":"the status code should be 400","match":{"arguments":[{"val":"400","offset":26}],"location":"com.dean.api.stepdefs.theStatusCodeShouldBe(int)"},"keyword":"Then "},{"result":{"error_message":"java.lang.AssertionError: 1 expectation failed.\nJSON path error doesn't match.\nExpected: BODY_NOT_VALID\n  Actual: PARAMS_NOT_VALID\n\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)\n\tat org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)\n\tat io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)\n\tat io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)\n\tat io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:270)\n\tat io.restassured.specification.ResponseSpecification$body$0.callCurrent(Unknown Source)\n\tat io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:117)\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:244)\n\tat com.dean.api.stepdefs.theResponseBodyShouldContainInformation(stepdefs.java:180)\n\tat ✽.the response body should contain information that \"BODY_NOT_VALID\" and \"Path `firstName` (`aVeryVeryVeryVeryVeryLongFirstName`) is longer than the maximum allowed length (30).\"(file:///home/runner/work/automation-web-api-finalproject/automation-web-api-finalproject/src/test/resources/api/features/03_PUT.feature:60)\n","duration":10535000,"status":"failed"},"line":60,"name":"the response body should contain information that \"BODY_NOT_VALID\" and \"Path `firstName` (`aVeryVeryVeryVeryVeryLongFirstName`) is longer than the maximum allowed length (30).\"","match":{"arguments":[{"val":"\"BODY_NOT_VALID\"","offset":50},{"val":"\"Path `firstName` (`aVeryVeryVeryVeryVeryLongFirstName`) is longer than the maximum allowed length (30).\"","offset":71}],"location":"com.dean.api.stepdefs.theResponseBodyShouldContainInformation(java.lang.String,java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@api"},{"name":"@put-negative-boudaries"}]}],"name":"PUT","description":"","id":"put","keyword":"Feature","uri":"file:src/test/resources/api/features/03_PUT.feature","tags":[{"name":"@api","type":"Tag","location":{"line":1,"column":1}}]},{"line":2,"elements":[{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":410000,"status":"passed"},"line":5,"name":"the request header is properly set up","match":{"location":"com.dean.api.stepdefs.theRequestHeaderIsProperlySetUp()"},"keyword":"Given "}]},{"start_timestamp":"2023-12-21T16:36:15.190Z","line":15,"name":"DELETE: delete data user with valid id","description":"","id":"delete;delete:-delete-data-user-with-valid-id;;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":121388000,"status":"passed"},"line":9,"name":"send a \"DELETE\" request to the \"user\" endpoint with id \"userId1\"","match":{"arguments":[{"val":"\"DELETE\"","offset":7},{"val":"\"user\"","offset":31},{"val":"\"userId1\"","offset":55}],"location":"com.dean.api.stepdefs.sendARequestToTheEndpointWithId(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: expected:<200> but was:<400>\n\tat org.junit.Assert.fail(Assert.java:89)\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\n\tat org.junit.Assert.assertEquals(Assert.java:647)\n\tat org.junit.Assert.assertEquals(Assert.java:633)\n\tat com.dean.api.stepdefs.theStatusCodeShouldBe(stepdefs.java:61)\n\tat ✽.the status code should be 200(file:///home/runner/work/automation-web-api-finalproject/automation-web-api-finalproject/src/test/resources/api/features/04_DELETE.feature:10)\n","duration":475000,"status":"failed"},"line":10,"name":"the status code should be 200","match":{"arguments":[{"val":"200","offset":26}],"location":"com.dean.api.stepdefs.theStatusCodeShouldBe(int)"},"keyword":"Then "},{"result":{"duration":44000,"status":"skipped"},"line":11,"name":"all response should be match with \"delete_user.json\"","match":{"arguments":[{"val":"\"delete_user.json\"","offset":34}],"location":"com.dean.api.stepdefs.allResponseShouldBeMatchWith(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@api"},{"name":"@delete-positive"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":354000,"status":"passed"},"line":5,"name":"the request header is properly set up","match":{"location":"com.dean.api.stepdefs.theRequestHeaderIsProperlySetUp()"},"keyword":"Given "}]},{"start_timestamp":"2023-12-21T16:36:15.316Z","line":16,"name":"DELETE: delete data user with valid id","description":"","id":"delete;delete:-delete-data-user-with-valid-id;;3","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":105474000,"status":"passed"},"line":9,"name":"send a \"DELETE\" request to the \"user\" endpoint with id \"userId2\"","match":{"arguments":[{"val":"\"DELETE\"","offset":7},{"val":"\"user\"","offset":31},{"val":"\"userId2\"","offset":55}],"location":"com.dean.api.stepdefs.sendARequestToTheEndpointWithId(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: expected:<200> but was:<400>\n\tat org.junit.Assert.fail(Assert.java:89)\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\n\tat org.junit.Assert.assertEquals(Assert.java:647)\n\tat org.junit.Assert.assertEquals(Assert.java:633)\n\tat com.dean.api.stepdefs.theStatusCodeShouldBe(stepdefs.java:61)\n\tat ✽.the status code should be 200(file:///home/runner/work/automation-web-api-finalproject/automation-web-api-finalproject/src/test/resources/api/features/04_DELETE.feature:10)\n","duration":442000,"status":"failed"},"line":10,"name":"the status code should be 200","match":{"arguments":[{"val":"200","offset":26}],"location":"com.dean.api.stepdefs.theStatusCodeShouldBe(int)"},"keyword":"Then "},{"result":{"duration":36000,"status":"skipped"},"line":11,"name":"all response should be match with \"delete_user.json\"","match":{"arguments":[{"val":"\"delete_user.json\"","offset":34}],"location":"com.dean.api.stepdefs.allResponseShouldBeMatchWith(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@api"},{"name":"@delete-positive"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":396000,"status":"passed"},"line":5,"name":"the request header is properly set up","match":{"location":"com.dean.api.stepdefs.theRequestHeaderIsProperlySetUp()"},"keyword":"Given "}]},{"start_timestamp":"2023-12-21T16:36:15.425Z","line":17,"name":"DELETE: delete data user with valid id","description":"","id":"delete;delete:-delete-data-user-with-valid-id;;4","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":110682000,"status":"passed"},"line":9,"name":"send a \"DELETE\" request to the \"user\" endpoint with id \"userId3\"","match":{"arguments":[{"val":"\"DELETE\"","offset":7},{"val":"\"user\"","offset":31},{"val":"\"userId3\"","offset":55}],"location":"com.dean.api.stepdefs.sendARequestToTheEndpointWithId(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: expected:<200> but was:<400>\n\tat org.junit.Assert.fail(Assert.java:89)\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\n\tat org.junit.Assert.assertEquals(Assert.java:647)\n\tat org.junit.Assert.assertEquals(Assert.java:633)\n\tat com.dean.api.stepdefs.theStatusCodeShouldBe(stepdefs.java:61)\n\tat ✽.the status code should be 200(file:///home/runner/work/automation-web-api-finalproject/automation-web-api-finalproject/src/test/resources/api/features/04_DELETE.feature:10)\n","duration":522000,"status":"failed"},"line":10,"name":"the status code should be 200","match":{"arguments":[{"val":"200","offset":26}],"location":"com.dean.api.stepdefs.theStatusCodeShouldBe(int)"},"keyword":"Then "},{"result":{"duration":47000,"status":"skipped"},"line":11,"name":"all response should be match with \"delete_user.json\"","match":{"arguments":[{"val":"\"delete_user.json\"","offset":34}],"location":"com.dean.api.stepdefs.allResponseShouldBeMatchWith(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@api"},{"name":"@delete-positive"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":404000,"status":"passed"},"line":5,"name":"the request header is properly set up","match":{"location":"com.dean.api.stepdefs.theRequestHeaderIsProperlySetUp()"},"keyword":"Given "}]},{"start_timestamp":"2023-12-21T16:36:15.540Z","line":18,"name":"DELETE: delete data user with valid id","description":"","id":"delete;delete:-delete-data-user-with-valid-id;;5","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":115019000,"status":"passed"},"line":9,"name":"send a \"DELETE\" request to the \"user\" endpoint with id \"userId4\"","match":{"arguments":[{"val":"\"DELETE\"","offset":7},{"val":"\"user\"","offset":31},{"val":"\"userId4\"","offset":55}],"location":"com.dean.api.stepdefs.sendARequestToTheEndpointWithId(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: expected:<200> but was:<400>\n\tat org.junit.Assert.fail(Assert.java:89)\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\n\tat org.junit.Assert.assertEquals(Assert.java:647)\n\tat org.junit.Assert.assertEquals(Assert.java:633)\n\tat com.dean.api.stepdefs.theStatusCodeShouldBe(stepdefs.java:61)\n\tat ✽.the status code should be 200(file:///home/runner/work/automation-web-api-finalproject/automation-web-api-finalproject/src/test/resources/api/features/04_DELETE.feature:10)\n","duration":431000,"status":"failed"},"line":10,"name":"the status code should be 200","match":{"arguments":[{"val":"200","offset":26}],"location":"com.dean.api.stepdefs.theStatusCodeShouldBe(int)"},"keyword":"Then "},{"result":{"duration":41000,"status":"skipped"},"line":11,"name":"all response should be match with \"delete_user.json\"","match":{"arguments":[{"val":"\"delete_user.json\"","offset":34}],"location":"com.dean.api.stepdefs.allResponseShouldBeMatchWith(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@api"},{"name":"@delete-positive"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":349000,"status":"passed"},"line":5,"name":"the request header is properly set up","match":{"location":"com.dean.api.stepdefs.theRequestHeaderIsProperlySetUp()"},"keyword":"Given "}]},{"start_timestamp":"2023-12-21T16:36:15.659Z","line":21,"name":"DELETE: delete data user with invalid id","description":"","id":"delete;delete:-delete-data-user-with-invalid-id","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":104452000,"status":"passed"},"line":22,"name":"send a \"DELETE\" request to the \"user\" endpoint with id \"userId5\"","match":{"arguments":[{"val":"\"DELETE\"","offset":7},{"val":"\"user\"","offset":31},{"val":"\"userId5\"","offset":55}],"location":"com.dean.api.stepdefs.sendARequestToTheEndpointWithId(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":129000,"status":"passed"},"line":23,"name":"the status code should be 400","match":{"arguments":[{"val":"400","offset":26}],"location":"com.dean.api.stepdefs.theStatusCodeShouldBe(int)"},"keyword":"Then "},{"result":{"duration":7658000,"status":"passed"},"line":24,"name":"the response body should contain:","match":{"location":"com.dean.api.stepdefs.theResponseBodyShouldContain(java.util.Map<java.lang.String, java.lang.String>)"},"rows":[{"cells":["error","PARAMS_NOT_VALID"]}],"keyword":"And "}],"tags":[{"name":"@api"},{"name":"@delete-negative"}]}],"name":"DELETE","description":"","id":"delete","keyword":"Feature","uri":"file:src/test/resources/api/features/04_DELETE.feature","tags":[{"name":"@api","type":"Tag","location":{"line":1,"column":1}}]},{"line":2,"elements":[{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":396000,"status":"passed"},"line":5,"name":"the request header is properly set up","match":{"location":"com.dean.api.stepdefs.theRequestHeaderIsProperlySetUp()"},"keyword":"Given "}]},{"start_timestamp":"2023-12-21T16:36:15.774Z","line":8,"name":"GET: get list of tags","description":"","id":"tag;get:-get-list-of-tags","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":508212000,"status":"passed"},"line":9,"name":"send a \"GET\" request to the \"tag\" endpoint","match":{"arguments":[{"val":"\"GET\"","offset":7},{"val":"\"tag\"","offset":28}],"location":"com.dean.api.stepdefs.sendARequestToTheEndpoint(java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":91000,"status":"passed"},"line":10,"name":"the status code should be 200","match":{"arguments":[{"val":"200","offset":26}],"location":"com.dean.api.stepdefs.theStatusCodeShouldBe(int)"},"keyword":"Then "},{"result":{"duration":271473000,"status":"passed"},"line":11,"name":"all response should be match with \"get_list_tag.json\"","match":{"arguments":[{"val":"\"get_list_tag.json\"","offset":34}],"location":"com.dean.api.stepdefs.allResponseShouldBeMatchWith(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@api"},{"name":"@get-positive"}]}],"name":"TAG","description":"","id":"tag","keyword":"Feature","uri":"file:src/test/resources/api/features/05_TAG.feature","tags":[{"name":"@api","type":"Tag","location":{"line":1,"column":1}}]}]